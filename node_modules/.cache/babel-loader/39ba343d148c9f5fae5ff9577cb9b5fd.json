{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCityName, getCurrentWeatherByCoord, getCityCoordinatesByName, getWeather } from \"../appThunk\";\nimport { setCurrentCity } from \"../actions/citiesActions\";\nconst initialState = {\n  actualLocation: {},\n  hasFetched: false,\n  isFetching: false,\n  isFetchingError: null\n};\nconst locationReducer = createReducer(initialState, {\n  [getWeather.pending]: state => {\n    state.isFetching = true;\n    state.hasFetched = false;\n    return state;\n  },\n  [getWeather.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getWeather.fulfilled]: (state, action) => {\n    console.log('getWeather.fulfilled', action.payload);\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.actualLocation = {\n      city: action.payload.results[0].address_components[0].long_name,\n      countryCode: action.payload.results[0].address_components.find(addr => addr.types.some(type => type === \"country\")).short_name,\n      location: {\n        lat: action.payload.results[0].geometry.location.lat,\n        lon: action.payload.results[0].geometry.location.lng\n      }\n    };\n    return state;\n  },\n  [setCurrentCity]: (state, action) => {\n    state.actualLocation = action.payload;\n    return state;\n  },\n  [getCityCoordinatesByName.pending]: state => {\n    state.isFetching = true;\n    state.hasFetched = false;\n    return state;\n  },\n  [getCityCoordinatesByName.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getCityCoordinatesByName.fulfilled]: (state, action) => {\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.actualLocation = {\n      city: action.payload.results[0].address_components[0].long_name,\n      countryCode: action.payload.results[0].address_components.find(addr => addr.types.some(type => type === \"country\")).short_name,\n      location: {\n        lat: action.payload.results[0].geometry.location.lat,\n        lon: action.payload.results[0].geometry.location.lng\n      }\n    };\n    return state;\n  }\n});\nexport default locationReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/locationReducer.js"],"names":["createReducer","getCityName","getCurrentWeatherByCoord","getCityCoordinatesByName","getWeather","setCurrentCity","initialState","actualLocation","hasFetched","isFetching","isFetchingError","locationReducer","pending","state","rejected","action","error","message","fulfilled","console","log","payload","city","results","address_components","long_name","countryCode","find","addr","types","some","type","short_name","location","lat","geometry","lon","lng"],"mappings":"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","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCityName, getCurrentWeatherByCoord, getCityCoordinatesByName, getWeather} from \"../appThunk\";\r\nimport {setCurrentCity} from \"../actions/citiesActions\"\r\n\r\n\r\nconst initialState = {\r\n    actualLocation: {},\r\n    hasFetched: false,\r\n    isFetching: false,\r\n    isFetchingError: null\r\n};\r\n\r\nconst locationReducer = createReducer(initialState, {\r\n    [getWeather.pending]: (state) => {\r\n        state.isFetching = true;\r\n        state.hasFetched = false;\r\n        return state;\r\n    },\r\n    [getWeather.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getWeather.fulfilled]: (state, action) => {\r\n        console.log('getWeather.fulfilled', action.payload)\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.actualLocation = {\r\n            city: action.payload.results[0].address_components[0].long_name,\r\n            countryCode: action.payload.results[0].address_components.find(addr => addr.types.some(type => type === \"country\")).short_name,\r\n            location: {\r\n                lat: action.payload.results[0].geometry.location.lat,\r\n                lon: action.payload.results[0].geometry.location.lng\r\n            }\r\n        }\r\n        return state;\r\n    },\r\n    [setCurrentCity] : (state, action) => {\r\n        state.actualLocation = action.payload;\r\n        return state;\r\n    },\r\n    [getCityCoordinatesByName.pending]: (state) => {\r\n        state.isFetching = true;\r\n        state.hasFetched = false;\r\n        return state;\r\n    },\r\n    [getCityCoordinatesByName.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getCityCoordinatesByName.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.actualLocation = {\r\n            city: action.payload.results[0].address_components[0].long_name,\r\n            countryCode: action.payload.results[0].address_components.find(addr => addr.types.some( type => type === \"country\")).short_name,\r\n            location: {\r\n                lat: action.payload.results[0].geometry.location.lat,\r\n                lon: action.payload.results[0].geometry.location.lng\r\n            }\r\n        }\r\n        return state;\r\n    },\r\n})\r\n\r\nexport default locationReducer;"]},"metadata":{},"sourceType":"module"}