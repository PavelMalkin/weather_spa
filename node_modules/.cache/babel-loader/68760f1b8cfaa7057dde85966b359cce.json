{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\basic\\\\Forecast.js\";\nimport React from 'react';\nimport './Forecast.css';\nimport Gmap from \"../elementary/Gmap\";\nimport { ForecastCard } from \"../elementary/ForecastCard\";\nimport Moment from 'moment';\nimport { Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nexport function Forecast(props) {\n  const forecastItems = props.hasFetched ? props.weather.daily.map((day, index) => /*#__PURE__*/React.createElement(ForecastCard, Object.assign({\n    key: index + 10000\n  }, day, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 49\n    }\n  }))) : null;\n  const forecastHours = props.weather.hourly.map(forecast => {\n    if (Moment.unix(forecast.dt).format('DD') === Moment().add(props.forecastPeriod - 1, 'days').format('DD') && Moment.unix(forecast.dt).format('HH') % 6 === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: forecast.dt,\n        className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }, \" \", Moment.unix(forecast.dt).format('HH:mm '), \" \"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, \" \", Math.floor(forecast.temp - 273.15, 1), \"\\xB0C,\"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, \"  \", forecast.weather[0].description, \",\"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, \" Wind - \", forecast.wind_speed, \" m/s\"));\n    }\n  });\n  const typeForecast = props.hasFetched && props.forecastPeriod < 7 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_Forecast_hourly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, Moment().add(props.forecastPeriod - 1, 'days').calendar(null, {\n    sameDay: '[Today]',\n    nextDay: '[Tomorrow]',\n    nextWeek: 'dddd',\n    sameElse: 'L'\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, Moment().add(props.forecastPeriod - 1, 'days').format('MMMM, DD'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Weather\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delimiter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), forecastHours) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, forecastItems));\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard_forecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, typeForecast, props.forecastPeriod < 7 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Gmap, Object.assign({}, props.actualLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }))) : null));\n}\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/basic/Forecast.js"],"names":["React","Gmap","ForecastCard","Moment","Typography","Paper","Forecast","props","forecastItems","hasFetched","weather","daily","map","day","index","forecastHours","hourly","forecast","unix","dt","format","add","forecastPeriod","Math","floor","temp","description","wind_speed","typeForecast","calendar","sameDay","nextDay","nextWeek","sameElse","actualLocation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Forecast.css'\r\nimport Gmap from \"../elementary/Gmap\";\r\nimport {ForecastCard} from \"../elementary/ForecastCard\";\r\n\r\nimport Moment from 'moment';\r\n\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport function Forecast(props) {\r\n\r\n    const forecastItems = (props.hasFetched) ? (\r\n        props.weather.daily.map((day, index) => <ForecastCard key={index + 10000} {...day}/>)\r\n    ) : null;\r\n\r\n\r\n    const forecastHours = props.weather.hourly.map(forecast => {\r\n            if (Moment.unix(forecast.dt).format('DD') === Moment().add(props.forecastPeriod - 1, 'days').format('DD') &&\r\n                Moment.unix(forecast.dt).format('HH') % 6 === 0) {\r\n                return (\r\n                    <div key={forecast.dt} className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                        <Typography> {Moment.unix(forecast.dt).format('HH:mm ')} </Typography>\r\n                        <Typography> {Math.floor(forecast.temp - 273.15, 1)}°C,</Typography>\r\n                        <Typography>  {forecast.weather[0].description},</Typography>\r\n                        <Typography> Wind - {forecast.wind_speed} m/s</Typography>\r\n                    </div>\r\n                )\r\n            }\r\n        });\r\n\r\n    const typeForecast = (props.hasFetched && props.forecastPeriod < 7) ? (\r\n        <div className='Wizard_Forecast_hourly'>\r\n            <div className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                <Typography variant='h5'>\r\n                    {Moment().add(props.forecastPeriod - 1, 'days').calendar(null, {\r\n                        sameDay: '[Today]',\r\n                        nextDay: '[Tomorrow]',\r\n                        nextWeek: 'dddd',\r\n                        sameElse: 'L'\r\n                    })}\r\n                </Typography>\r\n            </div>\r\n            <div className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                <Typography>\r\n                    {Moment().add(props.forecastPeriod - 1, 'days').format('MMMM, DD')}\r\n                </Typography>\r\n            </div>\r\n            <div className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                <Typography>Time</Typography>\r\n                <Typography>Weather</Typography>\r\n            </div>\r\n            <div className='delimiter'>\r\n                <hr className=\"solid\"/>\r\n            </div>\r\n            {forecastHours}\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <div className='Wizard_DetailedWeather_week'>\r\n                {forecastItems}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Paper elevation={3}>\r\n            <div className='wizard_forecast'>\r\n                {typeForecast}\r\n                {(props.forecastPeriod < 7) ?\r\n                    <div className='map_container'>\r\n                        <Gmap {...props.actualLocation}/>\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        </Paper>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}