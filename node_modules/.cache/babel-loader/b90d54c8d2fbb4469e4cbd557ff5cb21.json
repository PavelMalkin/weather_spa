{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Gmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nexport default function Gmap(props) {\n  _s();\n\n  const googleMapRef = useRef();\n\n  const getLatLng = () => {\n    let lat, lng, placeId;\n    new window.google.maps.Geocoder().geocode({\n      'address': `${placeName}`\n    }, function (results, status) {\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        placeId = results[0].place_id;\n        createGoogleMap(results[0].geometry.location);\n        lat = results[0].geometry.location.lat();\n        lng = results[0].geometry.location.lng();\n        new window.google.maps.Marker({\n          position: {\n            lat,\n            lng\n          },\n          map: googleMap,\n          animation: window.google.maps.Animation.DROP,\n          title: `${placeName}`\n        });\n        setGoogleMapInfo({ ...GoogleMapInfo,\n          lat,\n          lng,\n          placeId,\n          isLoading: false,\n          googleMap\n        });\n      } else {\n        alert('Geocode was not successful for the following reason: ' + status);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const googleMapScript = document.createElement('script');\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\n    googleMapScript.async = true;\n    window.document.body.appendChild(googleMapScript);\n    googleMapScript.addEventListener('load', () => {\n      getLatLng();\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"google-map\",\n    ref: googleMapRef,\n    style: {\n      width: '400px',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  });\n}\n\n_s(Gmap, \"Y0VbcuztHeUANOdthotyjUxY7g8=\");\n\n_c = Gmap;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Gmap.js"],"names":["React","useRef","useEffect","Gmap","props","googleMapRef","getLatLng","lat","lng","placeId","window","google","maps","Geocoder","geocode","placeName","results","status","GeocoderStatus","OK","place_id","createGoogleMap","geometry","location","Marker","position","map","googleMap","animation","Animation","DROP","title","setGoogleMapInfo","GoogleMapInfo","isLoading","alert","googleMapScript","document","createElement","src","process","env","REACT_APP_GOOGLE_API_KEY","async","body","appendChild","addEventListener","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACpB,QAAIC,GAAJ,EAASC,GAAT,EAAcC,OAAd;AACA,QAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,QAAvB,GAAkCC,OAAlC,CAA0C;AAAE,iBAAY,GAAEC,SAAU;AAA1B,KAA1C,EAAyE,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAChG,UAAIA,MAAM,KAAKP,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBM,cAAnB,CAAkCC,EAAjD,EAAqD;AACjDV,QAAAA,OAAO,GAAGO,OAAO,CAAC,CAAD,CAAP,CAAWI,QAArB;AACAC,QAAAA,eAAe,CAACL,OAAO,CAAC,CAAD,CAAP,CAAWM,QAAX,CAAoBC,QAArB,CAAf;AACAhB,QAAAA,GAAG,GAAGS,OAAO,CAAC,CAAD,CAAP,CAAWM,QAAX,CAAoBC,QAApB,CAA6BhB,GAA7B,EAAN;AACAC,QAAAA,GAAG,GAAGQ,OAAO,CAAC,CAAD,CAAP,CAAWM,QAAX,CAAoBC,QAApB,CAA6Bf,GAA7B,EAAN;AACA,YAAIE,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBY,MAAvB,CAA8B;AAC1BC,UAAAA,QAAQ,EAAE;AAAElB,YAAAA,GAAF;AAAOC,YAAAA;AAAP,WADgB;AAE1BkB,UAAAA,GAAG,EAAEC,SAFqB;AAG1BC,UAAAA,SAAS,EAAElB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBiB,SAAnB,CAA6BC,IAHd;AAI1BC,UAAAA,KAAK,EAAG,GAAEhB,SAAU;AAJM,SAA9B;AAMAiB,QAAAA,gBAAgB,CAAC,EAAE,GAAGC,aAAL;AAAoB1B,UAAAA,GAApB;AAAyBC,UAAAA,GAAzB;AAA8BC,UAAAA,OAA9B;AAAuCyB,UAAAA,SAAS,EAAE,KAAlD;AAAyDP,UAAAA;AAAzD,SAAD,CAAhB;AACH,OAZD,MAYO;AACHQ,QAAAA,KAAK,CAAC,0DAA0DlB,MAA3D,CAAL;AACH;AACJ,KAhBD;AAiBH,GAnBD;;AAqBAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAxB;AACAF,IAAAA,eAAe,CAACG,GAAhB,GAAuB,+CAA8CC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,mBAA1G;AACAN,IAAAA,eAAe,CAACO,KAAhB,GAAwB,IAAxB;AACAjC,IAAAA,MAAM,CAAC2B,QAAP,CAAgBO,IAAhB,CAAqBC,WAArB,CAAiCT,eAAjC;AACAA,IAAAA,eAAe,CAACU,gBAAhB,CAAiC,MAAjC,EAAyC,MAAM;AAC3CxC,MAAAA,SAAS;AACZ,KAFD;AAGH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,GAAG,EAAED,YAFT;AAGI,IAAA,KAAK,EAAE;AAAC0C,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH;;GAxCuB7C,I;;KAAAA,I;AAwCvB","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\n\r\n\r\nexport default function Gmap(props) {\r\n    const googleMapRef = useRef();\r\n\r\n    const getLatLng = () => {\r\n        let lat, lng, placeId;\r\n        new window.google.maps.Geocoder().geocode({ 'address': `${placeName}` }, function (results, status) {\r\n            if (status === window.google.maps.GeocoderStatus.OK) {\r\n                placeId = results[0].place_id;\r\n                createGoogleMap(results[0].geometry.location);\r\n                lat = results[0].geometry.location.lat();\r\n                lng = results[0].geometry.location.lng();\r\n                new window.google.maps.Marker({\r\n                    position: { lat, lng },\r\n                    map: googleMap,\r\n                    animation: window.google.maps.Animation.DROP,\r\n                    title: `${placeName}`\r\n                });\r\n                setGoogleMapInfo({ ...GoogleMapInfo, lat, lng, placeId, isLoading: false, googleMap });\r\n            } else {\r\n                alert('Geocode was not successful for the following reason: ' + status);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const googleMapScript = document.createElement('script');\r\n        googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\r\n        googleMapScript.async = true;\r\n        window.document.body.appendChild(googleMapScript);\r\n        googleMapScript.addEventListener('load', () => {\r\n            getLatLng();\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            id=\"google-map\"\r\n            ref={googleMapRef}\r\n            style={{width: '400px', height: '300px'}}/>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}