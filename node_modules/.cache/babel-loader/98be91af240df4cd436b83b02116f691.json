{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\SavedCities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function SavedCities() {\n  _s();\n\n  const classes = useStyles();\n  const cities = useSelector(store => store.cities.savedCities);\n  const curCity = useSelector(store => store.cities.currentCity);\n  useEffect(() => {\n    if (curCity) {\n      // console.log(curCity.result[0].find( place => place.types.some(type => type ==='locality')))\n      console.log(curCity);\n    }\n  }, [curCity]);\n  const svCities = cities.map((city, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      key: index + 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, city));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, svCities));\n}\n\n_s(SavedCities, \"lxPpu+nucUBhlKQULKCTE2qdLvI=\", false, function () {\n  return [useStyles, useSelector, useSelector];\n});\n\n_c = SavedCities;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedCities\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/SavedCities.js"],"names":["React","useEffect","useState","useSelector","makeStyles","Paper","Grid","Button","useStyles","theme","root","flexGrow","button","padding","spacing","textAlign","color","palette","text","secondary","SavedCities","classes","cities","store","savedCities","curCity","currentCity","console","log","svCities","map","city","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADL;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHtB;AAJ6B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,WAAT,GAAyB;AAAA;;AACpC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,MAAM,GAAGnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,WAAvB,CAA1B;AACA,QAAMC,OAAO,GAAGtB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaI,WAAvB,CAA3B;AAEAzB,EAAAA,SAAS,CAAE,MAAM;AACb,QAAIwB,OAAJ,EAAa;AACjB;AACQE,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACH;AACJ,GALQ,EAKP,CAACA,OAAD,CALO,CAAT;AAQA,QAAMI,QAAQ,GAAGP,MAAM,CAACQ,GAAP,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1C,wBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,GAAG,EAAEA,KAAK,GAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEX,OAAO,CAACT,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCmB,IAApC,CADJ,CADJ;AAKH,GANgB,CAAjB;AAQA,sBACI;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKmB,QADL,CADJ,CADJ;AAOH;;GA5BuBT,W;UACJZ,S,EACDL,W,EACCA,W;;;KAHIiB,W;AA4BvB","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    button: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function SavedCities  () {\r\n    const classes = useStyles();\r\n    const cities = useSelector(store => store.cities.savedCities)\r\n    const curCity = useSelector(store => store.cities.currentCity)\r\n\r\n    useEffect( () => {\r\n        if (curCity) {\r\n    // console.log(curCity.result[0].find( place => place.types.some(type => type ==='locality')))\r\n            console.log(curCity)\r\n        }\r\n    },[curCity])\r\n\r\n\r\n    const svCities = cities.map( (city, index) => {\r\n        return (\r\n            <Grid item xs={2} key={index+100}>\r\n                <Button className={classes.button}>{city}</Button>\r\n            </Grid>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                {svCities}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}