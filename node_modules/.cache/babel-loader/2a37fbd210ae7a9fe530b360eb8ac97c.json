{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCurrentWeather } from '../app/appThunk';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from \"@material-ui/core/Container\";\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16)\n    }\n  }\n}));\nexport default function Main() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const weather = useSelector(store => store.weather);\n  useEffect(() => {\n    if (!weather.hasFetched && !weather.isFetchingError && !weather.isFetching) {\n      dispatch(getCurrentWeather());\n    }\n  }, [weather]);\n  console.log('weather in main component', weather.currentWeather);\n  const Weather = weather.hasFetched ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, Math.floor(weather.currentWeather.main.temp - 273.15, 1), \" C\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, weather.currentWeather.name), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })) : null;\n  return /*#__PURE__*/React.createElement(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      backgroundColor: '#cfe8fc',\n      height: '30vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, Weather)));\n}\n\n_s(Main, \"SrBLfVYVwWrf1w+STmSU/TZxkkE=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Main.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getCurrentWeather","makeStyles","Container","Paper","CssBaseline","Typography","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","Main","classes","dispatch","weather","store","hasFetched","isFetchingError","isFetching","console","log","currentWeather","Weather","Math","floor","main","temp","name","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGF,aAAS;AACLC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADH;AAELC,MAAAA,KAAK,EAAEN,KAAK,CAACK,OAAN,CAAc,EAAd,CAFF;AAGLE,MAAAA,MAAM,EAAEP,KAAK,CAACK,OAAN,CAAc,EAAd;AAHH;AAHP;AAD+B,CAAZ,CAAD,CAA5B;AAYA,eAAe,SAASG,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,OAAO,GAAGpB,WAAW,CAACqB,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACqB,OAAO,CAACE,UAAT,IAAuB,CAACF,OAAO,CAACG,eAAhC,IAAmD,CAACH,OAAO,CAACI,UAAhE,EAA4E;AACxEL,MAAAA,QAAQ,CAACjB,iBAAiB,EAAlB,CAAR;AACH;AACJ,GAJQ,EAIN,CAACkB,OAAD,CAJM,CAAT;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCN,OAAO,CAACO,cAAjD;AAEA,QAAMC,OAAO,GAAIR,OAAO,CAACE,UAAT,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACO,cAAR,CAAuBI,IAAvB,CAA4BC,IAA5B,GAAmC,MAA9C,EAAsD,CAAtD,CAAL,OADgC,eAEhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,OAAO,CAACO,cAAR,CAAuBM,IAA5B,CAFgC,eAGhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHgC,CAAxB,GAKV,IALN;AAQA,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,SAAlB;AAA6BlB,MAAAA,MAAM,EAAE;AAArC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,OADL,CADJ,CADJ,CADJ;AAUH;;GA/BuBX,I;UACJT,S,EACCP,W,EACDD,W;;;KAHIiB,I","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getCurrentWeather} from '../app/appThunk'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(16),\r\n            height: theme.spacing(16),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Main() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.weather);\r\n\r\n    useEffect(() => {\r\n        if (!weather.hasFetched && !weather.isFetchingError && !weather.isFetching) {\r\n            dispatch(getCurrentWeather())\r\n        }\r\n    }, [weather])\r\n\r\n    console.log('weather in main component', weather.currentWeather)\r\n\r\n    const Weather = (weather.hasFetched) ? (<div>\r\n            <h3>{Math.floor(weather.currentWeather.main.temp - 273.15, 1)} C</h3>\r\n            <h2>{weather.currentWeather.name}</h2>\r\n            <h4></h4>\r\n        </div>)\r\n        : null;\r\n\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Paper elevation={3}>\r\n                <Typography style={{backgroundColor: '#cfe8fc', height: '30vh'}}>\r\n                    {Weather}\r\n                </Typography>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}