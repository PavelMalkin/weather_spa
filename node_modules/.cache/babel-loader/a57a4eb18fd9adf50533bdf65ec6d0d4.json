{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getForecast } from \"../appThunk\";\nimport { setForecast, dropForecastWeather } from \"../actions/weatherActions\";\nconst initialState = {\n  forecastWeather: {},\n  forecastPeriod: 7,\n  hasFetched: false,\n  isFetching: false,\n  isFetchingError: null\n};\nconst forecastReducer = createReducer(initialState, {\n  [getForecast.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getForecast.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getForecast.fulfilled]: (state, action) => {\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.forecastWeather = action.payload;\n    return state;\n  },\n  [setForecast]: (state, action) => {\n    state.forecastPeriod = action.payload;\n    return state;\n  },\n  [dropForecastWeather]: state => {\n    state.isFetching = false;\n    state.hasFetched = false;\n    state.forecastWeather = {};\n    return state;\n  }\n});\nexport default forecastReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/forecastReducer.js"],"names":["createReducer","getForecast","setForecast","dropForecastWeather","initialState","forecastWeather","forecastPeriod","hasFetched","isFetching","isFetchingError","forecastReducer","pending","state","rejected","action","error","message","fulfilled","payload"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,EAAqBC,mBAArB,QAA+C,2BAA/C;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,EADA;AAEjBC,EAAAA,cAAc,EAAE,CAFC;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,UAAU,EAAE,KAJK;AAKjBC,EAAAA,eAAe,EAAE;AALA,CAArB;AAQA,MAAMC,eAAe,GAAGV,aAAa,CAACI,YAAD,EAAe;AAChD,GAACH,WAAW,CAACU,OAAb,GAAwBC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACA,WAAOI,KAAP;AACH,GAJ+C;AAKhD,GAACX,WAAW,CAACY,QAAb,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACvCF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACG,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOJ,KAAP;AACH,GAT+C;AAUhD,GAACX,WAAW,CAACgB,SAAb,GAAyB,CAACL,KAAD,EAAQE,MAAR,KAAmB;AACxCF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACAK,IAAAA,KAAK,CAACP,eAAN,GAAyBS,MAAM,CAACI,OAAhC;AACA,WAAON,KAAP;AACH,GAf+C;AAgBhD,GAACV,WAAD,GAAgB,CAACU,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,IAAAA,KAAK,CAACN,cAAN,GAAuBQ,MAAM,CAACI,OAA9B;AACA,WAAON,KAAP;AACH,GAnB+C;AAoBhD,GAACT,mBAAD,GAAwBS,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,IAAAA,KAAK,CAACP,eAAN,GAAwB,EAAxB;AACA,WAAOO,KAAP;AACH;AAzB+C,CAAf,CAArC;AA4BA,eAAeF,eAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getForecast} from \"../appThunk\";\r\nimport {setForecast, dropForecastWeather} from \"../actions/weatherActions\";\r\n\r\n\r\nconst initialState = {\r\n    forecastWeather: {},\r\n    forecastPeriod: 7,\r\n    hasFetched: false,\r\n    isFetching: false,\r\n    isFetchingError: null\r\n};\r\n\r\nconst forecastReducer = createReducer(initialState, {\r\n    [getForecast.pending]: (state) => {\r\n        state.isFetching = true;\r\n        return state;\r\n    },\r\n    [getForecast.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getForecast.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.forecastWeather =  action.payload;\r\n        return state;\r\n    },\r\n    [setForecast] : (state, action) => {\r\n        state.forecastPeriod = action.payload\r\n        return state;\r\n    },\r\n    [dropForecastWeather]: (state) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = false;\r\n        state.forecastWeather = {};\r\n        return state;\r\n    }\r\n})\r\n\r\nexport default forecastReducer;"]},"metadata":{},"sourceType":"module"}