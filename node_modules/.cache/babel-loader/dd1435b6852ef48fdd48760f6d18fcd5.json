{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Gmap from \"./Gmap\";\nimport Card from \"@material-ui/core/Card\";\nimport Moment from 'moment';\nimport { CardContent, Grid, Typography } from \"@material-ui/core\";\nimport { ForecastItems } from \"./elementary/ForecastItems\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ForecastCard } from \"./elementary/ForecastCard\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\nexport function Forecast(props) {\n  _s();\n\n  const classes = useStyles();\n  console.log('props in forecast', props);\n  const forecastItems = props.hasFetched ? props.weather.daily.map((day, index) => /*#__PURE__*/React.createElement(ForecastCard, Object.assign({\n    key: index + 1000\n  }, day, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 50\n    }\n  }))) : null;\n  const forecastHours = props.hasFetched && props.forecastPeriod < 7 ? props.weather.hourly.map(forecast => {\n    if (Moment.unix(forecast.dt).format('DD') === Moment().add(props.weather.forecastPeriod - 1, 'days').format('DD') && Moment.unix(forecast.dt).format('HH') % 6 === 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        align: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, Moment.unix(forecast.dt).format('HH:mm '), Math.floor(forecast.temp - 273.15, 1), \" \\xB0C Wind \", forecast.wind_speed, \" meters per second\"));\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    wrap: \"wrap\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    direction: \"column\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, Moment().add(props.forecastPeriod - 1, 'days').calendar(null, {\n    sameDay: '[Today]',\n    nextDay: '[Tomorrow]',\n    nextWeek: 'dddd',\n    sameElse: 'L'\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, Moment().add(props.forecastPeriod - 1, 'days').format('MMMM, DD'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, \"Time   Weather\")), forecastHours)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, props.forecastPeriod < 7 ? /*#__PURE__*/React.createElement(Gmap, Object.assign({}, props.actualLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 51\n    }\n  })) : null)));\n}\n\n_s(Forecast, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Forecast.js"],"names":["React","Gmap","Card","Moment","CardContent","Grid","Typography","ForecastItems","makeStyles","ForecastCard","useStyles","theme","root","flexGrow","Forecast","props","classes","console","log","forecastItems","hasFetched","weather","daily","map","day","index","forecastHours","forecastPeriod","hourly","forecast","unix","dt","format","add","Math","floor","temp","wind_speed","calendar","sameDay","nextDay","nextWeek","sameElse","actualLocation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Gmap from \"./Gmap\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Moment from 'moment';\r\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport {ForecastItems} from \"./elementary/ForecastItems\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {ForecastCard} from \"./elementary/ForecastCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport function Forecast(props) {\r\n    const classes = useStyles();\r\n\r\n    console.log('props in forecast', props);\r\n\r\n    const forecastItems = (props.hasFetched) ? (\r\n        props.weather.daily.map( (day, index) => <ForecastCard key={index + 1000} {...day}/>)\r\n    ) : null;\r\n\r\n\r\n\r\n    const forecastHours = (props.hasFetched && props.forecastPeriod < 7)? (\r\n        props.weather.hourly.map(forecast => {\r\n            if ( Moment.unix(forecast.dt).format('DD') === Moment().add(props.weather.forecastPeriod -1,'days').format('DD') &&\r\n                Moment.unix(forecast.dt).format('HH')%6 === 0) {\r\n                return (\r\n                    <Grid item>\r\n                        <Typography align='flex-start'>\r\n                            {Moment.unix(forecast.dt).format('HH:mm ')}\r\n                            {Math.floor(forecast.temp - 273.15, 1)} Â°C\r\n                            Wind {forecast.wind_speed} meters per second\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                )\r\n            }\r\n        })\r\n    ) : null;\r\n\r\n       return (\r\n        <div >\r\n            <Grid container spacing={2} wrap='wrap'\r\n                  justify=\"space-between\" >\r\n\r\n                <Grid item xs={3}>\r\n                    <Grid container spacing={4} direction='column' justify=\"space-between\" >\r\n                        <Grid item>\r\n                        <Typography>\r\n                            {Moment().add(props.forecastPeriod - 1, 'days').calendar(null,{\r\n                                sameDay : '[Today]',\r\n                                nextDay : '[Tomorrow]',\r\n                                nextWeek : 'dddd',\r\n                                sameElse : 'L'\r\n                            })}\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>\r\n                                {Moment().add(props.forecastPeriod - 1, 'days').format('MMMM, DD')}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>\r\n                                Time   Weather\r\n                            </Typography>\r\n                        </Grid>\r\n                        {forecastHours}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/*<Grid container spacing={2} justify=\"flex-start\">*/}\r\n                {/*    {(props.forecastPeriod < 7) ? null : forecastItems }*/}\r\n                {/*</Grid>*/}\r\n\r\n                <Grid item xs={8}>\r\n                    {(props.forecastPeriod < 7) ? <Gmap {...props.actualLocation}/> : null}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}