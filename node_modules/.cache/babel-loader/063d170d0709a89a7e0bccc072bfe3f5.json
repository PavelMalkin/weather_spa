{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getWeather } from \"../appThunk\"; // import {dropWeather} from \"../actions/weatherActions\";\n\nconst initialState = {\n  Weather: {\n    currentWeather: [],\n    dailyForecast: [],\n    hoursForecast: []\n  },\n  hasFetched: false,\n  isFetching: false,\n  isFetchingError: null\n};\nconst weatherReducer = createReducer(initialState, {\n  [getWeather.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getWeather.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getWeather.fulfilled]: (state, action) => {\n    console.log('payload getWeather.fulfilled one call', action.payload);\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.currentWeather = action.payload;\n    return state;\n  },\n  [dropWeather]: state => {\n    state.Weather = {};\n    state.isFetching = false;\n    state.hasFetched = false;\n    return state;\n  }\n});\nexport default weatherReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/weatherReducer.js"],"names":["createReducer","getWeather","initialState","Weather","currentWeather","dailyForecast","hoursForecast","hasFetched","isFetching","isFetchingError","weatherReducer","pending","state","rejected","action","error","message","fulfilled","console","log","payload","dropWeather"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,UAAR,QAAyB,aAAzB,C,CACA;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,cAAc,EAAE,EADX;AAELC,IAAAA,aAAa,EAAE,EAFV;AAGLC,IAAAA,aAAa,EAAE;AAHV,GADQ;AAMjBC,EAAAA,UAAU,EAAE,KANK;AAOjBC,EAAAA,UAAU,EAAE,KAPK;AAQjBC,EAAAA,eAAe,EAAE;AARA,CAArB;AAWA,MAAMC,cAAc,GAAGV,aAAa,CAACE,YAAD,EAAe;AAC/C,GAACD,UAAU,CAACU,OAAZ,GAAuBC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACA,WAAOI,KAAP;AACH,GAJ8C;AAK/C,GAACX,UAAU,CAACY,QAAZ,GAAuB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACtCF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACG,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOJ,KAAP;AACH,GAT8C;AAU/C,GAACX,UAAU,CAACgB,SAAZ,GAAwB,CAACL,KAAD,EAAQE,MAAR,KAAmB;AACvCI,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDL,MAAM,CAACM,OAA5D;AACAR,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACAK,IAAAA,KAAK,CAACR,cAAN,GAAwBU,MAAM,CAACM,OAA/B;AACA,WAAOR,KAAP;AACH,GAhB8C;AAiB/C,GAACS,WAAD,GAAiBT,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACT,OAAN,GAAgB,EAAhB;AACAS,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACA,WAAOK,KAAP;AACH;AAtB8C,CAAf,CAApC;AAyBA,eAAeF,cAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getWeather} from \"../appThunk\";\r\n// import {dropWeather} from \"../actions/weatherActions\";\r\n\r\n\r\nconst initialState = {\r\n    Weather: {\r\n        currentWeather: [],\r\n        dailyForecast: [],\r\n        hoursForecast: []\r\n    },\r\n    hasFetched: false,\r\n    isFetching: false,\r\n    isFetchingError: null\r\n};\r\n\r\nconst weatherReducer = createReducer(initialState, {\r\n    [getWeather.pending]: (state) => {\r\n        state.isFetching = true;\r\n        return state;\r\n    },\r\n    [getWeather.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getWeather.fulfilled]: (state, action) => {\r\n        console.log('payload getWeather.fulfilled one call', action.payload)\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.currentWeather =  action.payload;\r\n        return state;\r\n    },\r\n    [dropWeather] : (state) => {\r\n        state.Weather = {};\r\n        state.isFetching = false;\r\n        state.hasFetched = false;\r\n        return state;\r\n    }\r\n})\r\n\r\nexport default weatherReducer;"]},"metadata":{},"sourceType":"module"}