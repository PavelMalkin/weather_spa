{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\basic\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveCity } from \"../../redux/actions/citiesActions\"; // Material\n\nimport Paper from '@material-ui/core/Paper';\nimport { CardContent, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { ActualWeather } from \"../elementary/ActualWeather\";\nexport default function Main(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const weather = useSelector(store => store.weather);\n  const savedCities = useSelector(store => store.cities.savedCities);\n  console.log('Main fired');\n  const Weather = useMemo(() => {\n    return weather.hasFetched ? /*#__PURE__*/React.createElement(ActualWeather, {\n      weather: weather.weather.current,\n      location: props.actualLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }) : null;\n  }, [weather.hasFetched, weather.weather, props.actualLocation]);\n\n  const handleButton = () => {\n    if (!savedCities.find(city => city.city === props.actualLocation.city)) {\n      dispatch(saveCity([props.actualLocation]));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: {\n      minHeight: '15vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true // direction=\"row\"\n    ,\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \" \"), Weather, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  })))));\n}\n\n_s(Main, \"2V5fIrHM+0iJa9E8BsQk4WdQXe8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/basic/Main.js"],"names":["React","useEffect","useMemo","useSelector","useDispatch","saveCity","Paper","CardContent","Grid","IconButton","Typography","AddCircleOutlineIcon","ActualWeather","Main","props","dispatch","weather","store","savedCities","cities","console","log","Weather","hasFetched","current","actualLocation","handleButton","find","city","minHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,QAAuB,mCAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,WAAR,EAAqBC,IAArB,EAA2BC,UAA3B,EAAuCC,UAAvC,QAAwD,mBAAxD;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,OAAO,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,WAAW,GAAGf,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACE,MAAN,CAAaD,WAAvB,CAA/B;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAMC,OAAO,GAAGpB,OAAO,CAAC,MAAM;AAC1B,WAAOc,OAAO,CAACO,UAAR,gBACH,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEP,OAAO,CAACA,OAAR,CAAgBQ,OAAxC;AAAiD,MAAA,QAAQ,EAAEV,KAAK,CAACW,cAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,GACkF,IADzF;AAEH,GAHsB,EAGpB,CAACT,OAAO,CAACO,UAAT,EAAqBP,OAAO,CAACA,OAA7B,EAAsCF,KAAK,CAACW,cAA5C,CAHoB,CAAvB;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAI,CAACR,WAAW,CAACS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACA,IAAL,KAAcd,KAAK,CAACW,cAAN,CAAqBG,IAA5D,CAAL,EAAwE;AACpEb,MAAAA,QAAQ,CAACV,QAAQ,CAAC,CAACS,KAAK,CAACW,cAAP,CAAD,CAAT,CAAR;AACH;AACJ,GAJD;;AAOA,sBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAACI,MAAAA,SAAS,EAAE;AAAZ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf,CACM;AADN;AAEM,IAAA,OAAO,EAAC,eAFd;AAGM,IAAA,UAAU,EAAC,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,EAKKP,OALL,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEI,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CANJ,CADJ,CADJ;AAkBH;;GAtCuBb,I;UACHT,W,EACDD,W,EACIA,W;;;KAHAU,I","sourcesContent":["import React, {useEffect, useMemo} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {saveCity} from \"../../redux/actions/citiesActions\";\r\n// Material\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {CardContent, Grid, IconButton, Typography} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {ActualWeather} from \"../elementary/ActualWeather\";\r\n\r\n\r\nexport default function Main(props) {\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.weather);\r\n    const savedCities = useSelector(store => store.cities.savedCities)\r\n\r\n    console.log('Main fired')\r\n\r\n    const Weather = useMemo(() => {\r\n        return weather.hasFetched ?\r\n            <ActualWeather weather={weather.weather.current} location={props.actualLocation}/> : null;\r\n    }, [weather.hasFetched, weather.weather, props.actualLocation])\r\n\r\n\r\n    const handleButton = () => {\r\n        if (!savedCities.find(city => city.city === props.actualLocation.city)) {\r\n            dispatch(saveCity([props.actualLocation]))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} style={{minHeight: '15vh'}}>\r\n            <Grid container\r\n                  // direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\">\r\n                <Grid item> </Grid>\r\n                {Weather}\r\n                <Grid item>\r\n                    <IconButton onClick={handleButton}>\r\n                        <AddCircleOutlineIcon/>\r\n                    </IconButton>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}