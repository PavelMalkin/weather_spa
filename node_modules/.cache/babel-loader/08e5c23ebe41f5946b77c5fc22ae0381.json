{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCityName, getCurrentWeather } from \"../appThunk\";\nconst initialState = {\n  currentCity: null,\n  savedCities: [['Moscow', 'RU'], ['Barcelona', 'ES'], ['Haifa', 'IL'], ['New York', 'US'], ['Podolsk', 'RU']]\n};\nconst citiesReducer = createReducer(initialState, {\n  [getCurrentWeather.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getCurrentWeather.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getCurrentWeather.fulfilled]: (state, action) => {\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.currentCity = action.payload;\n    console.log('state', state);\n    return state;\n  },\n  'SAVE_CITY': state => {\n    return state;\n  },\n  'SET_CITY': (state, action) => {}\n});\nexport default citiesReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/citiesReducer.js"],"names":["createReducer","getCityName","getCurrentWeather","initialState","currentCity","savedCities","citiesReducer","pending","state","isFetching","rejected","action","error","message","fulfilled","hasFetched","payload","console","log"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,WAAR,EAAqBC,iBAArB,QAA6C,aAA7C;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,WAAW,EAAE,CAAC,CAAC,QAAD,EAAW,IAAX,CAAD,EAAmB,CAAC,WAAD,EAAa,IAAb,CAAnB,EAAuC,CAAC,OAAD,EAAU,IAAV,CAAvC,EAAwD,CAAC,UAAD,EAAa,IAAb,CAAxD,EAA4E,CAAC,SAAD,EAAY,IAAZ,CAA5E;AAFI,CAArB;AAKA,MAAMC,aAAa,GAAGN,aAAa,CAACG,YAAD,EAAe;AAC9C,GAACD,iBAAiB,CAACK,OAAnB,GAA8BC,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,UAAN,GAAmB,IAAnB;AACA,WAAOD,KAAP;AACH,GAJ6C;AAK9C,GAACN,iBAAiB,CAACQ,QAAnB,GAA8B,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAC7CH,IAAAA,KAAK,CAACC,UAAN,GAAmB,KAAnB;AACAD,IAAAA,KAAK,CAACI,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOL,KAAP;AACH,GAT6C;AAU9C,GAACN,iBAAiB,CAACY,SAAnB,GAA+B,CAACN,KAAD,EAAQG,MAAR,KAAmB;AAC9CH,IAAAA,KAAK,CAACC,UAAN,GAAmB,KAAnB;AACAD,IAAAA,KAAK,CAACO,UAAN,GAAmB,IAAnB;AACAP,IAAAA,KAAK,CAACJ,WAAN,GAAqBO,MAAM,CAACK,OAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,KAArB;AACA,WAAOA,KAAP;AACH,GAhB6C;AAkB9C,eAAcA,KAAD,IAAW;AACpB,WAAOA,KAAP;AACH,GApB6C;AAqB9C,cAAY,CAACA,KAAD,EAAQG,MAAR,KAAmB,CAC9B;AAtB6C,CAAf,CAAnC;AA0BA,eAAeL,aAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCityName, getCurrentWeather} from \"../appThunk\";\r\n\r\n\r\nconst initialState = {\r\n    currentCity: null,\r\n    savedCities: [['Moscow', 'RU'], ['Barcelona','ES'], ['Haifa', 'IL'], ['New York', 'US'], ['Podolsk', 'RU']],\r\n};\r\n\r\nconst citiesReducer = createReducer(initialState, {\r\n    [getCurrentWeather.pending]: (state) => {\r\n        state.isFetching = true;\r\n        return state;\r\n    },\r\n    [getCurrentWeather.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getCurrentWeather.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.currentCity =  action.payload;\r\n        console.log('state', state)\r\n        return state;\r\n    },\r\n\r\n    'SAVE_CITY': (state) => {\r\n        return state;\r\n    },\r\n    'SET_CITY': (state, action) => {\r\n    }\r\n\r\n})\r\n\r\nexport default citiesReducer;"]},"metadata":{},"sourceType":"module"}