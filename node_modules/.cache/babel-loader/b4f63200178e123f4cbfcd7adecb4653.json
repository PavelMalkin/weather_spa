{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\main\\\\DetailedWeather.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { ForecastCard } from \"../elementary/ForecastCard\";\nimport Moment from \"moment\";\nimport { Button, Typography } from \"@material-ui/core\";\nexport function DetailedWeather(props) {\n  _s();\n\n  const weather = props.weather.weather;\n  const location = props.location.actualLocation;\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, props.weather.hasFetched ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_Current\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, location.city, \", \", location.countryCode), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, \"Current weather:\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, Math.floor(weather.current.temp - 273.15, 1), \" \\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, weather.current.weather[0].description), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, \"Humidity \", weather.current.humidity, \" %\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"Wind \", weather.current.wind_speed, \" meters per second\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delimiter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Hourly forecast for 48h:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, props.weather.hasFetched ? weather.hourly.map(forecast => {\n    if (Moment.unix(forecast.dt).format('HH') % 4 === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n        key: forecast.dt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }\n      }, \" \", Moment.unix(forecast.dt).format('DD MMM HH:mm '), \" \"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 41\n        }\n      }, \"  \", Math.floor(forecast.temp - 273.15, 1), \"\\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 41\n        }\n      }, \" Wind \", forecast.wind_speed, \" m/s\"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 41\n        }\n      }, \"  \", forecast.weather[0].description));\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delimiter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Week forecast\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, props.weather.hasFetched ? weather.daily.map((day, index) => /*#__PURE__*/React.createElement(ForecastCard, Object.assign({\n    key: index + 1000\n  }, day, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 59\n    }\n  }))) : null)));\n}\n\n_s(DetailedWeather, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DetailedWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedWeather\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/main/DetailedWeather.js"],"names":["React","useHistory","ForecastCard","Moment","Button","Typography","DetailedWeather","props","weather","location","actualLocation","history","push","hasFetched","city","countryCode","Math","floor","current","temp","description","humidity","wind_speed","hourly","map","forecast","unix","dt","format","daily","day","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {ForecastCard} from \"../elementary/ForecastCard\";\r\nimport Moment from \"moment\";\r\nimport {Button, Typography} from \"@material-ui/core\";\r\n\r\n\r\nexport function DetailedWeather(props) {\r\n    const weather = props.weather.weather;\r\n    const location = props.location.actualLocation;\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div><Button onClick={() => history.push('/')}>Back</Button>\r\n            <div className='Wizard_DetailedWeather'>\r\n                {(props.weather.hasFetched) ? (\r\n                    <div className='Wizard_DetailedWeather_Current'>\r\n                        <Typography variant='h4'>{location.city}, {location.countryCode}</Typography>\r\n                        <Typography variant='h5'>Current weather:</Typography>\r\n                        <Typography variant='h5'>{Math.floor(weather.current.temp - 273.15, 1)} °C</Typography>\r\n                        <Typography variant='h6'>{weather.current.weather[0].description}</Typography>\r\n                        <Typography variant='h6'>Humidity {weather.current.humidity} %</Typography>\r\n                        <Typography variant='h6'>Wind {weather.current.wind_speed} meters per second</Typography>\r\n                    </div>\r\n                ) : null}\r\n\r\n\r\n                <div className='delimiter'>\r\n                    <hr className=\"solid\"/>\r\n                </div>\r\n\r\n                <Typography variant='h5'>Hourly forecast for 48h:</Typography>\r\n                <div className=\"Wizard_DetailedWeather_hourlyForecast\">\r\n                    {(props.weather.hasFetched) ? (\r\n                        weather.hourly.map(forecast => {\r\n                            if (Moment.unix(forecast.dt).format('HH') % 4 === 0) {\r\n                                return (\r\n                                    <div className='Wizard_DetailedWeather_hourlyForecast_item' key={forecast.dt}>\r\n                                        <Typography> {Moment.unix(forecast.dt).format('DD MMM HH:mm ')} </Typography>\r\n                                        <Typography>  {Math.floor(forecast.temp - 273.15, 1)}°C</Typography>\r\n                                        <Typography> Wind {forecast.wind_speed} m/s</Typography>\r\n                                        <Typography>  {forecast.weather[0].description}</Typography>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })\r\n                    ) : null}\r\n                </div>\r\n                <div className='delimiter'>\r\n                    <hr className=\"solid\"/>\r\n                </div>\r\n                <Typography variant='h5'>Week forecast</Typography>\r\n                <div className=\"Wizard_DetailedWeather_week\">\r\n                    {(props.weather.hasFetched) ? (\r\n                        weather.daily.map((day, index) => <ForecastCard key={index + 1000} {...day}/>)\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}