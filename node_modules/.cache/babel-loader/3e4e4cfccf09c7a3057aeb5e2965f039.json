{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCityName, getCurrentWeatherByCoord } from \"../appThunk\";\nimport { setCurrentCity } from \"../actions/citiesActions\";\nconst initialState = {\n  actualLocation: [],\n  hasFetched: false,\n  isFetching: false,\n  isFetchingError: null\n};\nconst locationReducer = createReducer(initialState, {\n  [getCurrentWeatherByCoord.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getCurrentWeatherByCoord.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getCurrentWeatherByCoord.fulfilled]: (state, action) => {\n    console.log('getCurrentWeatherByCoord fired in reducer', action.payload);\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.actualLocation = [action.payload.list[0].name, action.payload.list[0].sys.country, action.payload.list[0].coord];\n    return state;\n  },\n  [setCurrentCity]: (state, action) => {\n    state.actualLocation = [action.payload];\n    return state;\n  }\n});\nexport default locationReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/locationReducer.js"],"names":["createReducer","getCityName","getCurrentWeatherByCoord","setCurrentCity","initialState","actualLocation","hasFetched","isFetching","isFetchingError","locationReducer","pending","state","rejected","action","error","message","fulfilled","console","log","payload","list","name","sys","country","coord"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,WAAR,EAAqBC,wBAArB,QAAoD,aAApD;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,eAAe,EAAE;AAJA,CAArB;AAOA,MAAMC,eAAe,GAAGT,aAAa,CAACI,YAAD,EAAe;AAChD,GAACF,wBAAwB,CAACQ,OAA1B,GAAqCC,KAAD,IAAW;AAC3CA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACA,WAAOI,KAAP;AACH,GAJ+C;AAKhD,GAACT,wBAAwB,CAACU,QAA1B,GAAqC,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACpDF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACG,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOJ,KAAP;AACH,GAT+C;AAUhD,GAACT,wBAAwB,CAACc,SAA1B,GAAsC,CAACL,KAAD,EAAQE,MAAR,KAAmB;AACrDI,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDL,MAAM,CAACM,OAAhE;AACAR,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACAK,IAAAA,KAAK,CAACN,cAAN,GAAuB,CACnBQ,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoB,CAApB,EAAuBC,IADJ,EAEnBR,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoB,CAApB,EAAuBE,GAAvB,CAA2BC,OAFR,EAGnBV,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoB,CAApB,EAAuBI,KAHJ,CAAvB;AAMA,WAAOb,KAAP;AACH,GArB+C;AAsBhD,GAACR,cAAD,GAAmB,CAACQ,KAAD,EAAQE,MAAR,KAAmB;AAClCF,IAAAA,KAAK,CAACN,cAAN,GAAuB,CAACQ,MAAM,CAACM,OAAR,CAAvB;AACA,WAAOR,KAAP;AACH;AAzB+C,CAAf,CAArC;AA4BA,eAAeF,eAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCityName, getCurrentWeatherByCoord} from \"../appThunk\";\r\nimport {setCurrentCity} from \"../actions/citiesActions\"\r\n\r\n\r\nconst initialState = {\r\n    actualLocation: [],\r\n    hasFetched: false,\r\n    isFetching: false,\r\n    isFetchingError: null\r\n};\r\n\r\nconst locationReducer = createReducer(initialState, {\r\n    [getCurrentWeatherByCoord.pending]: (state) => {\r\n        state.isFetching = true;\r\n        return state;\r\n    },\r\n    [getCurrentWeatherByCoord.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getCurrentWeatherByCoord.fulfilled]: (state, action) => {\r\n        console.log('getCurrentWeatherByCoord fired in reducer', action.payload)\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.actualLocation = [\r\n            action.payload.list[0].name,\r\n            action.payload.list[0].sys.country,\r\n            action.payload.list[0].coord\r\n        ]\r\n\r\n        return state;\r\n    },\r\n    [setCurrentCity] : (state, action) => {\r\n        state.actualLocation = [action.payload];\r\n        return state;\r\n    }\r\n})\r\n\r\nexport default locationReducer;"]},"metadata":{},"sourceType":"module"}