{"ast":null,"code":"import _slicedToArray from\"C:/dev/react/weather_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import GoogleMapReact from'google-map-react';import RoomIcon from'@material-ui/icons/Room';import Tooltip from'@material-ui/core/Tooltip';import IconButton from\"@material-ui/core/IconButton\";import{useSelector}from\"react-redux\";export default function Gmap(props){var currentWeather=useSelector(function(store){return store.weather;});var _useState=useState({lon:34.99,lat:32.82}),_useState2=_slicedToArray(_useState,2),weather=_useState2[0],setWeather=_useState2[1];useEffect(function(){if(currentWeather.hasFetched){setWeather(currentWeather.weather);}},[currentWeather]);var weatherDescription=weather.current?\"\".concat(Math.floor(weather.current.temp-273.15),\" \\xB0C,  \")+\"Wind \".concat(weather.current.wind_speed,\" meters per second\"):null;var AnyReactComponent=function AnyReactComponent(_ref){var text=_ref.text;return weatherDescription?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Tooltip,{title:weatherDescription,placement:\"top\"},/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(RoomIcon,{color:\"secondary\",fontSize:\"large\"})))):null;};return/*#__PURE__*/React.createElement(GoogleMapReact,{defaultZoom:11,center:{lat:weather.lat,lng:weather.lon}},/*#__PURE__*/React.createElement(AnyReactComponent,{lat:weather.lat,lng:weather.lon// text={props[0]}\n}));}","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/elementary/Gmap.js"],"names":["React","useEffect","useState","GoogleMapReact","RoomIcon","Tooltip","IconButton","useSelector","Gmap","props","currentWeather","store","weather","lon","lat","setWeather","hasFetched","weatherDescription","current","Math","floor","temp","wind_speed","AnyReactComponent","text","lng"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAAQC,WAAR,KAA0B,aAA1B,CAIA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAChC,GAAMC,CAAAA,cAAc,CAAGH,WAAW,CAAC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACC,OAAV,EAAN,CAAlC,CADgC,cAEFV,QAAQ,CAAC,CAACW,GAAG,CAAE,KAAN,CAAaC,GAAG,CAAE,KAAlB,CAAD,CAFN,wCAEzBF,OAFyB,eAEhBG,UAFgB,eAIhCd,SAAS,CAAC,UAAM,CACZ,GAAIS,cAAc,CAACM,UAAnB,CAA+B,CAC3BD,UAAU,CAACL,cAAc,CAACE,OAAhB,CAAV,CACH,CACJ,CAJQ,CAIN,CAACF,cAAD,CAJM,CAAT,CAOA,GAAMO,CAAAA,kBAAkB,CAAIL,OAAO,CAACM,OAAT,CAAqB,UAAGC,IAAI,CAACC,KAAL,CAAWR,OAAO,CAACM,OAAR,CAAgBG,IAAhB,CAAuB,MAAlC,CAAH,6BACxCT,OAAO,CAACM,OAAR,CAAgBI,UADwB,sBAArB,CAC+B,IAD1D,CAGA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,UAAEC,CAAAA,IAAF,MAAEA,IAAF,OAAaP,CAAAA,kBAAD,cAClC,4CACI,oBAAC,OAAD,EAAS,KAAK,CAAEA,kBAAhB,CAAoC,SAAS,CAAC,KAA9C,eACI,oBAAC,UAAD,mBACI,oBAAC,QAAD,EAAU,KAAK,CAAC,WAAhB,CAA4B,QAAQ,CAAC,OAArC,EADJ,CADJ,CADJ,CADkC,CAOxB,IAPY,EAA1B,CAUA,mBACQ,oBAAC,cAAD,EACI,WAAW,CAAE,EADjB,CAEI,MAAM,CAAE,CAAEH,GAAG,CAAEF,OAAO,CAACE,GAAf,CACJW,GAAG,CAAEb,OAAO,CAACC,GADT,CAFZ,eAKI,oBAAC,iBAAD,EACI,GAAG,CAAED,OAAO,CAACE,GADjB,CAEI,GAAG,CAAEF,OAAO,CAACC,GACb;AAHJ,EALJ,CADR,CAcH","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nexport default function Gmap(props) {\r\n    const currentWeather = useSelector(store => store.weather )\r\n    const [weather, setWeather] = useState({lon: 34.99, lat: 32.82});\r\n\r\n    useEffect(() => {\r\n        if (currentWeather.hasFetched) {\r\n            setWeather(currentWeather.weather)\r\n        }\r\n    }, [currentWeather])\r\n\r\n\r\n    const weatherDescription = (weather.current)?  (`${Math.floor(weather.current.temp - 273.15)} Â°C,  ` +\r\n    `Wind ${weather.current.wind_speed} meters per second`) : null;\r\n\r\n    const AnyReactComponent = ({text}) => (weatherDescription)? (\r\n        <div>\r\n            <Tooltip title={weatherDescription} placement=\"top\">\r\n                <IconButton>\r\n                    <RoomIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>) : null;\r\n\r\n\r\n    return (\r\n            <GoogleMapReact\r\n                defaultZoom={11}\r\n                center={{ lat: weather.lat,\r\n                    lng: weather.lon}}\r\n            >\r\n                <AnyReactComponent\r\n                    lat={weather.lat}\r\n                    lng={weather.lon}\r\n                    // text={props[0]}\r\n                />\r\n\r\n            </GoogleMapReact>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}