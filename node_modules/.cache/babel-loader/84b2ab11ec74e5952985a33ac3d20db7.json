{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\basic\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveCity } from \"../../redux/actions/citiesActions\"; // Material\n\nimport Paper from '@material-ui/core/Paper';\nimport { CardContent, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { ActualWeather } from \"../elementary/ActualWeather\";\nexport default function Main(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const weather = useSelector(store => store.weather);\n  const weatherToTest = useSelector(store => store.weather.weather);\n  const savedCities = useSelector(store => store.cities.savedCities);\n  const location = useSelector(store => store.location);\n  useEffect(() => console.log('location in Main', location), [location]); // useEffect(()=> console.log('weatherToTest in Main', weatherToTest),[weatherToTest])\n\n  const Weather = useMemo(() => {\n    return weather.hasFetched ? /*#__PURE__*/React.createElement(ActualWeather, {\n      weather: weather.weather.current,\n      location: props.actualLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 37\n      }\n    }) : null;\n  }, [weather.hasFetched, weather.weather, location]);\n\n  const handleButton = () => {\n    if (!savedCities.find(city => city.city === props.actualLocation.city)) {\n      dispatch(saveCity([props.actualLocation]));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: {\n      minHeight: '15vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), Weather, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  })))))));\n}\n\n_s(Main, \"KErNc6nvFi6BAZNlOFp9JZsXENQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/basic/Main.js"],"names":["React","useEffect","useMemo","useSelector","useDispatch","saveCity","Paper","CardContent","Grid","IconButton","Typography","AddCircleOutlineIcon","ActualWeather","Main","props","dispatch","weather","store","weatherToTest","savedCities","cities","location","console","log","Weather","hasFetched","current","actualLocation","handleButton","find","city","minHeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {saveCity} from \"../../redux/actions/citiesActions\";\r\n// Material\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {CardContent, Grid, IconButton, Typography} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {ActualWeather} from \"../elementary/ActualWeather\";\r\n\r\n\r\nexport default function Main(props) {\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.weather);\r\n    const weatherToTest = useSelector(store => store.weather.weather);\r\n    const savedCities = useSelector(store => store.cities.savedCities)\r\n    const location = useSelector(store => store.location)\r\n\r\n    useEffect(()=> console.log('location in Main', location),[location])\r\n    // useEffect(()=> console.log('weatherToTest in Main', weatherToTest),[weatherToTest])\r\n\r\n    const Weather = useMemo(()=> {\r\n        return weather.hasFetched ? <ActualWeather weather={weather.weather.current} location={props.actualLocation}/> : null;\r\n    }, [weather.hasFetched, weather.weather, location])\r\n\r\n\r\n\r\n    const handleButton = () => {\r\n        if (!savedCities.find(city => city.city === props.actualLocation.city)) {\r\n        dispatch(saveCity([props.actualLocation]))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} style={{minHeight: '15vh'}}>\r\n            <Grid container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\">\r\n                <Grid item>\r\n                </Grid>\r\n                {Weather}\r\n                <Grid item>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <IconButton onClick={handleButton}>\r\n                                <AddCircleOutlineIcon/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}