{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Gmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useSelector } from \"react-redux\";\nexport default function Gmap(props) {\n  _s();\n\n  const currentWeather = useSelector(store => store.weather);\n  const [weather, setWeather] = useState({\n    lon: 34.99,\n    lat: 32.82\n  });\n  useEffect(() => {\n    console.log('currentWeather', currentWeather.weather.current);\n\n    if (currentWeather.hasFetched) {\n      setWeather(currentWeather.weather);\n    }\n  }, [currentWeather]);\n  const weatherDescription = weather.current ? `${Math.floor(weather.current.temp - 273.15)} °C,  ` + `Wind ${weather.current.wind_speed} meters per second` : null;\n\n  const AnyReactComponent = ({\n    text\n  }) => weatherDescription ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: weatherDescription,\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RoomIcon, {\n    color: \"secondary\",\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })))) : null;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '50vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    defaultZoom: 11,\n    center: {\n      lat: weather.lat,\n      lng: weather.lon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AnyReactComponent, {\n    lat: weather.lat,\n    lng: weather.lon // text={props[0]}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(Gmap, \"qso8N38y01yvattEZlxVi99X6nc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Gmap.js"],"names":["React","useEffect","useState","GoogleMapReact","RoomIcon","Tooltip","IconButton","useSelector","Gmap","props","currentWeather","store","weather","setWeather","lon","lat","console","log","current","hasFetched","weatherDescription","Math","floor","temp","wind_speed","AnyReactComponent","text","height","width","lng"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAIA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAMC,cAAc,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAAlC;AACA,QAAM,CAACA,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC;AAACY,IAAAA,GAAG,EAAE,KAAN;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GAAD,CAAtC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,cAAc,CAACE,OAAf,CAAuBM,OAArD;;AACA,QAAIR,cAAc,CAACS,UAAnB,EAA+B;AAC3BN,MAAAA,UAAU,CAACH,cAAc,CAACE,OAAhB,CAAV;AACH;AACJ,GALQ,EAKN,CAACF,cAAD,CALM,CAAT;AAQA,QAAMU,kBAAkB,GAAIR,OAAO,CAACM,OAAT,GAAsB,GAAEG,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACM,OAAR,CAAgBK,IAAhB,GAAuB,MAAlC,CAA0C,QAA7C,GAC/C,QAAOX,OAAO,CAACM,OAAR,CAAgBM,UAAW,oBADR,GAC+B,IAD1D;;AAGA,QAAMC,iBAAiB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAaN,kBAAD,gBAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,kBAAhB;AAAoC,IAAA,SAAS,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADkC,GAOxB,IAPd;;AAUA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,WAAW,EAAE,EADjB;AAEI,IAAA,MAAM,EAAE;AAAEb,MAAAA,GAAG,EAAEH,OAAO,CAACG,GAAf;AACJc,MAAAA,GAAG,EAAEjB,OAAO,CAACE;AADT,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,iBAAD;AACI,IAAA,GAAG,EAAEF,OAAO,CAACG,GADjB;AAEI,IAAA,GAAG,EAAEH,OAAO,CAACE,GAFjB,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CADJ;AAkBH;;GA3CuBN,I;UACGD,W;;;KADHC,I","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nexport default function Gmap(props) {\r\n    const currentWeather = useSelector(store => store.weather )\r\n    const [weather, setWeather] = useState({lon: 34.99, lat: 32.82});\r\n\r\n    useEffect(() => {\r\n        console.log('currentWeather', currentWeather.weather.current)\r\n        if (currentWeather.hasFetched) {\r\n            setWeather(currentWeather.weather)\r\n        }\r\n    }, [currentWeather])\r\n\r\n\r\n    const weatherDescription = (weather.current)?  (`${Math.floor(weather.current.temp - 273.15)} °C,  ` +\r\n    `Wind ${weather.current.wind_speed} meters per second`) : null;\r\n\r\n    const AnyReactComponent = ({text}) => (weatherDescription)? (\r\n        <div>\r\n            <Tooltip title={weatherDescription} placement=\"top\">\r\n                <IconButton>\r\n                    <RoomIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>) : null;\r\n\r\n\r\n    return (\r\n        <div style={{height: '50vh', width: '100%'}}>\r\n            <GoogleMapReact\r\n                defaultZoom={11}\r\n                center={{ lat: weather.lat,\r\n                    lng: weather.lon}}\r\n            >\r\n\r\n                <AnyReactComponent\r\n                    lat={weather.lat}\r\n                    lng={weather.lon}\r\n                    // text={props[0]}\r\n                />\r\n\r\n\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}