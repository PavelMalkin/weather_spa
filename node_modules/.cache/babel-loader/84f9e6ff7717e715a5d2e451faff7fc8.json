{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCurrentWeather } from '../redux/appThunk';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from \"@material-ui/core/Container\";\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport { CardContent, Grid, Typography } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16)\n    }\n  }\n}));\nexport default function Main() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const weather = useSelector(store => store.currentWeather);\n  const Weather = weather.hasFetched ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, Math.floor(weather.currentWeather.main.temp - 273.15, 1), \" C\"), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, weather.currentWeather.name, \", \", weather.currentWeather.sys.country), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Wind \", weather.currentWeather.wind.speed, \" meter per second\"))) : null;\n  return (\n    /*#__PURE__*/\n    // <Container fixed>\n    React.createElement(Paper, {\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, Weather)) // </Container>\n\n  );\n}\n\n_s(Main, \"pfG5lcAx+Xnhbxc+IFgNxH403fw=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Main.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getCurrentWeather","makeStyles","Container","Paper","CssBaseline","Card","CardContent","Grid","Typography","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","Main","classes","dispatch","weather","store","currentWeather","Weather","hasFetched","Math","floor","main","temp","name","sys","country","wind","speed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,WAAR,EAAqBC,IAArB,EAA2BC,UAA3B,QAA6C,mBAA7C;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGF,aAAS;AACLC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADH;AAELC,MAAAA,KAAK,EAAEN,KAAK,CAACK,OAAN,CAAc,EAAd,CAFF;AAGLE,MAAAA,MAAM,EAAEP,KAAK,CAACK,OAAN,CAAc,EAAd;AAHH;AAHP;AAD+B,CAAZ,CAAD,CAA5B;AAYA,eAAe,SAASG,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,OAAO,GAAGvB,WAAW,CAACwB,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA3B;AAEA,QAAMC,OAAO,GAAIH,OAAO,CAACI,UAAT,gBAAwB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BC,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACE,cAAR,CAAuBK,IAAvB,CAA4BC,IAA5B,GAAmC,MAA9C,EAAsD,CAAtD,CAA5B,OADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,OAAO,CAACE,cAAR,CAAuBO,IAAnD,QAA2DT,OAAO,CAACE,cAAR,CAAuBQ,GAAvB,CAA2BC,OAAtF,CAFJ,eAGI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiCX,OAAO,CAACE,cAAR,CAAuBU,IAAvB,CAA4BC,KAA7D,sBAHJ,CADoC,CAAxB,GAOV,IAPN;AAUA;AAAA;AACI;AACI,wBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AACI,MAAA,OAAO,EAAC,QADZ;AAEI,MAAA,UAAU,EAAC,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKV,OAHL,CADJ,CAFR,CAcI;;AAdJ;AAiBH;;GAhCuBN,I;UACJT,S,EACCV,W,EACDD,W;;;KAHIoB,I","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getCurrentWeather} from '../redux/appThunk'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Card from '@material-ui/core/Card';\r\nimport {CardContent, Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(16),\r\n            height: theme.spacing(16),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Main() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.currentWeather);\r\n\r\n    const Weather = (weather.hasFetched) ? (<Card>\r\n        <CardContent>\r\n            <Typography align='center'>{Math.floor(weather.currentWeather.main.temp - 273.15, 1)} C</Typography>\r\n            <Typography align='center'>{weather.currentWeather.name}, {weather.currentWeather.sys.country}</Typography>\r\n            <Typography align='center'>Wind {weather.currentWeather.wind.speed} meter per second</Typography>\r\n        </CardContent>\r\n        </Card>)\r\n        : null;\r\n\r\n\r\n    return (\r\n        // <Container fixed>\r\n            <Paper elevation={3}>\r\n                <Grid container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\">\r\n                    {Weather}\r\n                </Grid>\r\n                {/*<div style={{backgroundColor: '#cfe8fc',*/}\r\n                {/*    // height: '15vh'*/}\r\n                {/*}}>*/}\r\n\r\n                {/*</div>*/}\r\n            </Paper>\r\n        // </Container>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}