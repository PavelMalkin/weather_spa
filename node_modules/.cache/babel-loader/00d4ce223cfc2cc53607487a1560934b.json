{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\basic\\\\SavedCities.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCurrentCity, deleteCity } from \"../../redux/actions/citiesActions\";\nimport { getWeather } from \"../../redux/appThunk\";\nimport './SavedCities.css'; // Material\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, IconButton, Typography } from \"@material-ui/core\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Paper from \"@material-ui/core/Paper\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function SavedCities(props) {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const cities = useSelector(store => store.cities.savedCities);\n  const dispatch = useDispatch();\n  console.log(props);\n\n  const handleClick = city => {\n    dispatch(setCurrentCity(city));\n    dispatch(getWeather(city.location));\n    history.push(`/${city.city}`);\n  };\n\n  const handleDelete = city => {\n    dispatch(deleteCity(city));\n  };\n\n  const svCities = cities.map((city, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index + 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      onClick: () => handleClick(city),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, city.city), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"delete\",\n      onClick: () => handleDelete(city),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      style: {\n        fontSize: 13\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: \"Wizard_SavedCities_Container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Saved cities\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_SavedCities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, svCities));\n}\n\n_s(SavedCities, \"oqzwSnl5BGfMbt9oE6p8oxAaVEA=\", false, function () {\n  return [useHistory, useStyles, useSelector, useDispatch];\n});\n\n_c = SavedCities;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedCities\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/basic/SavedCities.js"],"names":["React","useHistory","useSelector","useDispatch","setCurrentCity","deleteCity","getWeather","makeStyles","Button","IconButton","Typography","HighlightOffIcon","Paper","useStyles","theme","button","padding","spacing","textAlign","color","palette","text","secondary","SavedCities","props","history","classes","cities","store","savedCities","dispatch","console","log","handleClick","city","location","push","handleDelete","svCities","map","index","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {setCurrentCity, deleteCity} from \"../../redux/actions/citiesActions\";\r\nimport {getWeather} from \"../../redux/appThunk\";\r\n\r\nimport './SavedCities.css'\r\n\r\n// Material\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, IconButton, Typography} from \"@material-ui/core\";\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function SavedCities(props) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const cities = useSelector(store => store.cities.savedCities);\r\n    const dispatch = useDispatch();\r\n    console.log(props)\r\n\r\n    const handleClick = (city) => {\r\n        dispatch(setCurrentCity(city));\r\n        dispatch(getWeather(city.location));\r\n        history.push(`/${city.city}`)\r\n    }\r\n\r\n    const handleDelete = (city) => {\r\n        dispatch(deleteCity(city))\r\n    }\r\n\r\n    const svCities = cities.map((city, index) => {\r\n        return (\r\n            <div key={index + 100}>\r\n                <Button className={classes.button}\r\n                        onClick={() => handleClick(city)}\r\n                >{city.city}</Button>\r\n                <IconButton size=\"small\" aria-label=\"delete\" onClick={() => handleDelete(city)}>\r\n                    <HighlightOffIcon style={{fontSize: 13}}/>\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Paper elevation={3} className='Wizard_SavedCities_Container'>\r\n            <Typography>Saved cities</Typography>\r\n            <div className='Wizard_SavedCities'>\r\n                {svCities}\r\n            </div>\r\n        </Paper>\r\n\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}