{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\SavedCities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCurrentCity } from \"../redux/actions/citiesActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from \"@material-ui/core\";\nimport { dropActualWeather, dropForecastWeather, dropWeather } from \"../redux/actions/weatherActions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function SavedCities() {\n  _s();\n\n  const classes = useStyles();\n  const cities = useSelector(store => store.cities.savedCities);\n  const dispatch = useDispatch();\n\n  const handleClick = city => {\n    dispatch(setCurrentCity(city));\n    dispatch(dropWeather());\n  };\n\n  const svCities = cities.map((city, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: index + 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      onClick: () => handleClick(city),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, city.city));\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    wrap: \"wrap\",\n    direction: \"row\",\n    justify: \"space-around\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, svCities);\n}\n\n_s(SavedCities, \"d/Tvj/moaep+KCFRyWZKTGqL1Fk=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = SavedCities;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedCities\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/SavedCities.js"],"names":["React","useEffect","useState","useSelector","useDispatch","setCurrentCity","makeStyles","Grid","Button","dropActualWeather","dropForecastWeather","dropWeather","useStyles","theme","root","flexGrow","button","padding","spacing","textAlign","color","palette","text","secondary","SavedCities","classes","cities","store","savedCities","dispatch","handleClick","city","svCities","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAR,QAA6B,gCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,iBAAR,EAA2BC,mBAA3B,EAAgDC,WAAhD,QAAkE,iCAAlE;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADL;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHtB;AAJ6B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,WAAT,GAAyB;AAAA;;AACpC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,MAAM,GAAGvB,WAAW,CAACwB,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,WAAvB,CAA1B;AACA,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;;AAEA,QAAM0B,WAAW,GAAIC,IAAD,IAAU;AAC1BF,IAAAA,QAAQ,CAACxB,cAAc,CAAC0B,IAAD,CAAf,CAAR;AACAF,IAAAA,QAAQ,CAAClB,WAAW,EAAZ,CAAR;AACH,GAHD;;AAMA,QAAMqB,QAAQ,GAAGN,MAAM,CAACO,GAAP,CAAY,CAACF,IAAD,EAAOG,KAAP,KAAiB;AAC1C,wBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEA,KAAK,GAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAET,OAAO,CAACT,MAA3B;AACQ,MAAA,OAAO,EAAE,MAAMc,WAAW,CAACC,IAAD,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEA,IAAI,CAACA,IAFP,CADJ,CADJ;AAOH,GARgB,CAAjB;AAUA,sBACQ,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAiB,IAAA,OAAO,EAAE,CAA1B;AACM,IAAA,IAAI,EAAC,MADX;AACkB,IAAA,SAAS,EAAC,KAD5B;AAEM,IAAA,OAAO,EAAC,cAFd;AAGM,IAAA,UAAU,EAAC,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKC,QAJL,CADR;AAQH;;GA7BuBR,W;UACJZ,S,EACDT,W,EACEC,W;;;KAHGoB,W;AA6BvB","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {setCurrentCity} from \"../redux/actions/citiesActions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {dropActualWeather, dropForecastWeather ,dropWeather} from \"../redux/actions/weatherActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    button: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function SavedCities  () {\r\n    const classes = useStyles();\r\n    const cities = useSelector(store => store.cities.savedCities);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = (city) => {\r\n        dispatch(setCurrentCity(city));\r\n        dispatch(dropWeather())\r\n    }\r\n\r\n\r\n    const svCities = cities.map( (city, index) => {\r\n        return (\r\n            <Grid item key={index+100}>\r\n                <Button className={classes.button}\r\n                        onClick={() => handleClick(city)}\r\n                >{city.city}</Button>\r\n            </Grid>\r\n        )\r\n    })\r\n\r\n    return (\r\n            <Grid container  spacing={2}\r\n                  wrap=\"wrap\" direction=\"row\"\r\n                  justify=\"space-around\"\r\n                  alignItems=\"flex-start\">\r\n                {svCities}\r\n            </Grid>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}