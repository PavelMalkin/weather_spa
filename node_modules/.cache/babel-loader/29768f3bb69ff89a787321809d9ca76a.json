{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Forecast.js\";\nimport React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport { CardContent, Typography } from \"@material-ui/core\";\nexport function Forecast(props) {\n  console.log('props in forecast', props);\n  const forecastCards = props.forecastWeather.list.map(day => {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, Math.floor(weather.currentWeather.main.temp - 273.15, 1), \" C\"), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, weather.currentWeather.name, \", \", weather.currentWeather.sys.country), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, \"Wind \", weather.currentWeather.wind.speed, \" meters per second\")));\n  }); // const Weather = (weather.hasFetched) ? (<Card>\n  //         <CardContent>\n  //             <Typography align='center' variant='h5'>{Math.floor(weather.currentWeather.main.temp - 273.15, 1)} C</Typography>\n  //             <Typography align='center' variant='h4'>{weather.currentWeather.name}, {weather.currentWeather.sys.country}</Typography>\n  //             <Typography align='center' variant='h6'>Wind {weather.currentWeather.wind.speed} meters per second</Typography>\n  //         </CardContent>\n  //     </Card>)\n  //     : null;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Test\");\n}\n_c = Forecast;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Forecast.js"],"names":["React","Card","CardContent","Typography","Forecast","props","console","log","forecastCards","forecastWeather","list","map","day","Math","floor","weather","currentWeather","main","temp","name","sys","country","wind","speed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,mBAAtC;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AAEF,QAAMG,aAAa,GAAGH,KAAK,CAACI,eAAN,CAAsBC,IAAtB,CAA2BC,GAA3B,CAAgCC,GAAG,IAAI;AACvD,wBAAQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACC,cAAR,CAAuBC,IAAvB,CAA4BC,IAA5B,GAAmC,MAA9C,EAAsD,CAAtD,CAAzC,OADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCH,OAAO,CAACC,cAAR,CAAuBG,IAAhE,QAAwEJ,OAAO,CAACC,cAAR,CAAuBI,GAAvB,CAA2BC,OAAnG,CAFJ,eAGI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8CN,OAAO,CAACC,cAAR,CAAuBM,IAAvB,CAA4BC,KAA1E,uBAHJ,CADI,CAAR;AAOH,GARmB,CAAtB,CAH8B,CAa5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;KA3BenB,Q;AA2Bf","sourcesContent":["import React from 'react';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {CardContent, Typography} from \"@material-ui/core\";\r\n\r\nexport function Forecast(props) {\r\n    console.log('props in forecast', props)\r\n\r\n  const forecastCards = props.forecastWeather.list.map( day => {\r\n        return (<Card>\r\n            <CardContent>\r\n                <Typography align='center' variant='h5'>{Math.floor(weather.currentWeather.main.temp - 273.15, 1)} C</Typography>\r\n                <Typography align='center' variant='h4'>{weather.currentWeather.name}, {weather.currentWeather.sys.country}</Typography>\r\n                <Typography align='center' variant='h6'>Wind {weather.currentWeather.wind.speed} meters per second</Typography>\r\n            </CardContent>\r\n        </Card>)\r\n    })\r\n\r\n    // const Weather = (weather.hasFetched) ? (<Card>\r\n    //         <CardContent>\r\n    //             <Typography align='center' variant='h5'>{Math.floor(weather.currentWeather.main.temp - 273.15, 1)} C</Typography>\r\n    //             <Typography align='center' variant='h4'>{weather.currentWeather.name}, {weather.currentWeather.sys.country}</Typography>\r\n    //             <Typography align='center' variant='h6'>Wind {weather.currentWeather.wind.speed} meters per second</Typography>\r\n    //         </CardContent>\r\n    //     </Card>)\r\n    //     : null;\r\n\r\n    return (\r\n        <div>\r\nTest\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}