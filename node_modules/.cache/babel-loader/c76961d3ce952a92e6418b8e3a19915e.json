{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCurrentWeather } from '../redux/appThunk';\nimport { saveCity } from \"../redux/actions/citiesActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from \"@material-ui/core/Container\";\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport { CardContent, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16)\n    }\n  }\n}));\nexport default function Main(props) {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const weather = useSelector(store => store.currentWeather);\n  const savedCities = useSelector(store => store.cities.savedCities);\n  const Weather = weather.hasFetched ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, Math.floor(weather.currentWeather.main.temp - 273.15, 1), \" C\"), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, weather.currentWeather.name, \", \", weather.currentWeather.sys.country), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Wind \", weather.currentWeather.wind.speed, \" meters per second\"))) : null;\n\n  const handleButton = () => {\n    if (!savedCities.find(city => city[0] === props.actualLocation[0])) {\n      dispatch(saveCity(props.actualLocation));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: {\n      minHeight: '15vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), Weather, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  })))))));\n}\n\n_s(Main, \"e5f+EzPVjFs/krVLsGJMGdYDC5U=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Main.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getCurrentWeather","saveCity","makeStyles","Container","Paper","CssBaseline","Card","CardContent","Grid","IconButton","Typography","AddCircleOutlineIcon","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","Main","props","classes","dispatch","weather","store","currentWeather","savedCities","cities","Weather","hasFetched","Math","floor","main","temp","name","sys","country","wind","speed","handleButton","find","city","actualLocation","minHeight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getCurrentWeather} from '../redux/appThunk'\r\nimport {saveCity} from \"../redux/actions/citiesActions\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Card from '@material-ui/core/Card';\r\nimport {CardContent, Grid, IconButton, Typography} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(16),\r\n            height: theme.spacing(16),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Main(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.currentWeather);\r\n    const savedCities = useSelector(store => store.cities.savedCities)\r\n\r\n    const Weather = (weather.hasFetched) ? (<Grid item>\r\n            <CardContent>\r\n                <Typography align='center'\r\n                            variant='h5'>{Math.floor(weather.currentWeather.main.temp - 273.15, 1)} C</Typography>\r\n                <Typography align='center'\r\n                            variant='h4'>{weather.currentWeather.name}, {weather.currentWeather.sys.country}</Typography>\r\n                <Typography align='center' variant='h6'>Wind {weather.currentWeather.wind.speed} meters per\r\n                    second</Typography>\r\n            </CardContent>\r\n        </Grid>)\r\n        : null;\r\n\r\n    const handleButton = () => {\r\n        if (!savedCities.find(city => city[0] === props.actualLocation[0])) {\r\n        dispatch(saveCity(props.actualLocation))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} style={{minHeight: '15vh'}}>\r\n            <Grid container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\">\r\n                <Grid item></Grid>\r\n                {Weather}\r\n                <Grid item>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <IconButton onClick={handleButton}>\r\n                                <AddCircleOutlineIcon/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}