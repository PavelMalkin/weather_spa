{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCurrentWeather } from \"../appThunk\";\nimport { dropActualWeather } from \"../actions/weatherActions\";\nconst initialState = {\n  currentWeather: {},\n  hasFetched: false,\n  isFetching: false,\n  isFetchingError: null\n};\nconst appReducer = createReducer(initialState, {\n  [getCurrentWeather.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getCurrentWeather.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getCurrentWeather.fulfilled]: (state, action) => {\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.currentWeather = action.payload;\n    return state;\n  },\n  [dropActualWeather]: state => {\n    state.currentWeather = {};\n    state.isFetching = false;\n    state.hasFetched = false;\n    return state;\n  }\n});\nexport default appReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/appReducer.js"],"names":["createReducer","getCurrentWeather","dropActualWeather","initialState","currentWeather","hasFetched","isFetching","isFetchingError","appReducer","pending","state","rejected","action","error","message","fulfilled","payload"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,iBAAR,QAAgC,aAAhC;AACA,SAAQC,iBAAR,QAAgC,2BAAhC;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,EADG;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,eAAe,EAAE;AAJE,CAArB;AAOA,MAAMC,UAAU,GAAGR,aAAa,CAACG,YAAD,EAAe;AAC7C,GAACF,iBAAiB,CAACQ,OAAnB,GAA8BC,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACA,WAAOI,KAAP;AACD,GAJ4C;AAK7C,GAACT,iBAAiB,CAACU,QAAnB,GAA8B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/CF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACG,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOJ,KAAP;AACD,GAT4C;AAU7C,GAACT,iBAAiB,CAACc,SAAnB,GAA+B,CAACL,KAAD,EAAQE,MAAR,KAAmB;AAChDF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACAK,IAAAA,KAAK,CAACN,cAAN,GAAwBQ,MAAM,CAACI,OAA/B;AACA,WAAON,KAAP;AACD,GAf4C;AAgB7C,GAACR,iBAAD,GAAuBQ,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACN,cAAN,GAAuB,EAAvB;AACAM,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACA,WAAOK,KAAP;AACD;AArB4C,CAAf,CAAhC;AAwBA,eAAeF,UAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCurrentWeather} from \"../appThunk\";\r\nimport {dropActualWeather} from \"../actions/weatherActions\";\r\n\r\n\r\nconst initialState = {\r\n  currentWeather: {},\r\n  hasFetched: false,\r\n  isFetching: false,\r\n  isFetchingError: null\r\n};\r\n\r\nconst appReducer = createReducer(initialState, {\r\n  [getCurrentWeather.pending]: (state) => {\r\n    state.isFetching = true;\r\n    return state;\r\n  },\r\n  [getCurrentWeather.rejected]: (state, action) => {\r\n    state.isFetching = false;\r\n    state.error = action.error.message;\r\n    return state;\r\n  },\r\n  [getCurrentWeather.fulfilled]: (state, action) => {\r\n    state.isFetching = false;\r\n    state.hasFetched = true;\r\n    state.currentWeather =  action.payload;\r\n    return state;\r\n  },\r\n  [dropActualWeather] : (state) => {\r\n    state.currentWeather = {};\r\n    state.isFetching = false;\r\n    state.hasFetched = false;\r\n    return state;\r\n  }\r\n})\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}