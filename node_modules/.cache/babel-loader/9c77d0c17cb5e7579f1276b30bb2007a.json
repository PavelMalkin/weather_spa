{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Gmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useSelector } from \"react-redux\";\nexport default function Gmap(props) {\n  _s();\n\n  const weather = useSelector(store => store.currentWeather.currentWeather);\n  console.log(weather);\n\n  const AnyReactComponent = ({\n    text\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: Math.floor(weather.main.temp - 273.15, 1) + ' C',\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RoomIcon, {\n    color: \"secondary\",\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '50vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.REACT_APP_GOOGLE_API_KEY\n    },\n    defaultCenter: {\n      lat: weather.coord.lat,\n      lng: weather.coord.lon\n    },\n    defaultZoom: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AnyReactComponent, {\n    lat: weather.coord.lat,\n    lng: weather.coord.lon,\n    text: props[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(Gmap, \"pQR6Xq4bk8EOimuaEsjCqhlR/2I=\", false, function () {\n  return [useSelector];\n});\n\n_c = Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Gmap.js"],"names":["React","useEffect","useState","GoogleMapReact","RoomIcon","Tooltip","IconButton","useSelector","Gmap","props","weather","store","currentWeather","console","log","AnyReactComponent","text","Math","floor","main","temp","height","width","key","process","env","REACT_APP_GOOGLE_API_KEY","lat","coord","lng","lon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAIA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAMC,OAAO,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBA,cAA/B,CAA3B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AAEA,QAAMK,iBAAiB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,kBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWR,OAAO,CAACS,IAAR,CAAaC,IAAb,GAAoB,MAA/B,EAAuC,CAAvC,IAA4C,IAA5D;AAAkE,IAAA,SAAS,EAAC,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ;;AAUA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,gBAAgB,EAAE;AAACC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAlB,KADtB;AAEI,IAAA,aAAa,EACT;AACIC,MAAAA,GAAG,EAAEjB,OAAO,CAACkB,KAAR,CAAcD,GADvB;AAEIE,MAAAA,GAAG,EAAEnB,OAAO,CAACkB,KAAR,CAAcE;AAFvB,KAHR;AAOI,IAAA,WAAW,EAAE,EAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI,oBAAC,iBAAD;AACI,IAAA,GAAG,EAAEpB,OAAO,CAACkB,KAAR,CAAcD,GADvB;AAEI,IAAA,GAAG,EAAEjB,OAAO,CAACkB,KAAR,CAAcE,GAFvB;AAGI,IAAA,IAAI,EAAErB,KAAK,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,CADJ;AAsBH;;GArCuBD,I;UACJD,W;;;KADIC,I","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nexport default function Gmap(props) {\r\n    const weather = useSelector(store => store.currentWeather.currentWeather )\r\n\r\n    console.log(weather)\r\n\r\n    const AnyReactComponent = ({text}) => (\r\n        <div>\r\n            <Tooltip title={Math.floor(weather.main.temp - 273.15, 1) + ' C'} placement=\"top\">\r\n                <IconButton>\r\n                    <RoomIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>);\r\n\r\n\r\n    return (\r\n        <div style={{height: '50vh', width: '100%'}}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_API_KEY}}\r\n                defaultCenter={\r\n                    {\r\n                        lat: weather.coord.lat,\r\n                        lng: weather.coord.lon\r\n                    }}\r\n                defaultZoom={11}\r\n            >\r\n\r\n                <AnyReactComponent\r\n                    lat={weather.coord.lat}\r\n                    lng={weather.coord.lon}\r\n                    text={props[0]}\r\n                />\r\n\r\n\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}