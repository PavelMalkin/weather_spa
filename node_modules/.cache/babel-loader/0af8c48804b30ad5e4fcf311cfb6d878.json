{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCurrentLocation, getCityName } from \"../appThunk\";\nconst initialState = {\n  actualLocation: {},\n  hasFetched: false,\n  isFetching: false,\n  isFetchingError: null\n};\nconst locationReducer = createReducer(initialState, {\n  [getCityName.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getCityName.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getCityName.fulfilled]: (state, action) => {\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.actualLocation = action.payload;\n    console.log('payload', action.payload);\n    return state;\n  }\n});\nexport default locationReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/locationReducer.js"],"names":["createReducer","getCurrentLocation","getCityName","initialState","actualLocation","hasFetched","isFetching","isFetchingError","locationReducer","pending","state","rejected","action","error","message","fulfilled","payload","console","log"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,kBAAR,EAA4BC,WAA5B,QAA8C,aAA9C;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,eAAe,EAAE;AAJA,CAArB;AAOA,MAAMC,eAAe,GAAGR,aAAa,CAACG,YAAD,EAAe;AAChD,GAACD,WAAW,CAACO,OAAb,GAAwBC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACA,WAAOI,KAAP;AACH,GAJ+C;AAKhD,GAACR,WAAW,CAACS,QAAb,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACvCF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACG,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOJ,KAAP;AACH,GAT+C;AAUhD,GAACR,WAAW,CAACa,SAAb,GAAyB,CAACL,KAAD,EAAQE,MAAR,KAAmB;AACxCF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACAK,IAAAA,KAAK,CAACN,cAAN,GAAwBQ,MAAM,CAACI,OAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,MAAM,CAACI,OAA9B;AACA,WAAON,KAAP;AACH;AAhB+C,CAAf,CAArC;AAmBA,eAAeF,eAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCurrentLocation, getCityName} from \"../appThunk\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    actualLocation: {},\r\n    hasFetched: false,\r\n    isFetching: false,\r\n    isFetchingError: null\r\n};\r\n\r\nconst locationReducer = createReducer(initialState, {\r\n    [getCityName.pending]: (state) => {\r\n        state.isFetching = true;\r\n        return state;\r\n    },\r\n    [getCityName.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getCityName.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.actualLocation =  action.payload;\r\n        console.log('payload', action.payload)\r\n        return state;\r\n    },\r\n})\r\n\r\nexport default locationReducer;"]},"metadata":{},"sourceType":"module"}