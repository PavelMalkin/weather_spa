{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Gmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useSelector } from \"react-redux\";\n\nconst AnyReactComponent = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Tooltip, {\n  title: \"marker\",\n  placement: \"top\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(IconButton, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(RoomIcon, {\n  color: \"secondary\",\n  fontSize: \"large\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}))));\n\n_c = AnyReactComponent;\nexport default function Gmap(props) {\n  _s();\n\n  const weather = useSelector(store => store);\n  console.log(props);\n  useEffect(() => {\n    if (props) {\n      setLocation({\n        lat: props[2].lat,\n        lng: props[2].lon\n      });\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '50vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.REACT_APP_GOOGLE_API_KEY\n    },\n    defaultCenter: {\n      lat: props[2].lat,\n      lng: props[2].lon\n    },\n    defaultZoom: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AnyReactComponent, {\n    lat: props[2].lat,\n    lng: props[2].lon,\n    text: props[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(Gmap, \"8Jawj1GtEqs2NjjxBCquwGUZYqM=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = Gmap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnyReactComponent\");\n$RefreshReg$(_c2, \"Gmap\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Gmap.js"],"names":["React","useEffect","useState","GoogleMapReact","RoomIcon","Tooltip","IconButton","useSelector","AnyReactComponent","text","Gmap","props","weather","store","console","log","setLocation","lat","lng","lon","height","width","key","process","env","REACT_APP_GOOGLE_API_KEY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,QAAf;AAAwB,EAAA,SAAS,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC,WAAhB;AAA4B,EAAA,QAAQ,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADA,CADJ;;KAAMD,iB;AASN,eAAe,SAASE,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAMC,OAAO,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAV,CAA3B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,KAAJ,EAAW;AACPK,MAAAA,WAAW,CAAC;AACRC,QAAAA,GAAG,EAAEN,KAAK,CAAC,CAAD,CAAL,CAASM,GADN;AAERC,QAAAA,GAAG,EAAEP,KAAK,CAAC,CAAD,CAAL,CAASQ;AAFN,OAAD,CAAX;AAIH;AACJ,GAPQ,EAON,CAACR,KAAD,CAPM,CAAT;AAUA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACS,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,gBAAgB,EAAE;AAACC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAlB,KADtB;AAEI,IAAA,aAAa,EACT;AACIR,MAAAA,GAAG,EAAEN,KAAK,CAAC,CAAD,CAAL,CAASM,GADlB;AAEIC,MAAAA,GAAG,EAAEP,KAAK,CAAC,CAAD,CAAL,CAASQ;AAFlB,KAHR;AAOI,IAAA,WAAW,EAAE,EAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI,oBAAC,iBAAD;AACI,IAAA,GAAG,EAAER,KAAK,CAAC,CAAD,CAAL,CAASM,GADlB;AAEI,IAAA,GAAG,EAAEN,KAAK,CAAC,CAAD,CAAL,CAASQ,GAFlB;AAGI,IAAA,IAAI,EAAER,KAAK,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,CADJ;AAsBH;;GArCuBD,I;UACJH,W;;;MADIG,I","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst AnyReactComponent = ({text}) => (\r\n    <div>\r\n    <Tooltip title='marker' placement=\"top\">\r\n        <IconButton>\r\n            <RoomIcon color=\"secondary\" fontSize=\"large\" />\r\n        </IconButton>\r\n    </Tooltip>\r\n    </div>);\r\n\r\nexport default function Gmap(props) {\r\n    const weather = useSelector(store => store )\r\n\r\n    console.log(props)\r\n\r\n    useEffect(() => {\r\n        if (props) {\r\n            setLocation({\r\n                lat: props[2].lat,\r\n                lng: props[2].lon\r\n            })\r\n        }\r\n    }, [props])\r\n\r\n\r\n    return (\r\n        <div style={{height: '50vh', width: '100%'}}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_API_KEY}}\r\n                defaultCenter={\r\n                    {\r\n                        lat: props[2].lat,\r\n                        lng: props[2].lon\r\n                    }}\r\n                defaultZoom={11}\r\n            >\r\n\r\n                <AnyReactComponent\r\n                    lat={props[2].lat}\r\n                    lng={props[2].lon}\r\n                    text={props[0]}\r\n                />\r\n\r\n\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}