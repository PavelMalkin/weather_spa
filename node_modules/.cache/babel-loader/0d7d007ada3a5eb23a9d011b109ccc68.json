{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Gmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport RoomIcon from '@material-ui/icons/Room';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst AnyReactComponent = ({\n  text\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 41\n  }\n}, text);\n\n_c = AnyReactComponent;\nexport default function Gmap(props) {\n  _s();\n\n  const [location, setLocation] = useState([]);\n  console.log(props); // const props = {\n  //     center: {\n  //         lat: 59.95,\n  //         lng: 30.33\n  //     },\n  //     zoom: 11\n  // };\n\n  useEffect(() => {\n    if (props) {\n      setLocation({\n        lat: props[2].lat,\n        lng: props[2].lon\n      });\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.REACT_APP_GOOGLE_API_KEY\n    },\n    defaultCenter: {\n      lat: props[2].lat,\n      lng: props[2].lon\n    },\n    defaultZoom: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"marker\",\n    placement: \"top\",\n    lat: props[2].lat,\n    lng: props[2].lon,\n    text: props[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })));\n}\n\n_s(Gmap, \"ttjiYUPYY+feK0UwV0iuo6TtVYQ=\");\n\n_c2 = Gmap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnyReactComponent\");\n$RefreshReg$(_c2, \"Gmap\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Gmap.js"],"names":["React","useEffect","useState","GoogleMapReact","RoomIcon","Tooltip","AnyReactComponent","text","Gmap","props","location","setLocation","console","log","lat","lng","lon","height","width","key","process","env","REACT_APP_GOOGLE_API_KEY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,IAAN,CAAxC;;KAAMD,iB;AAEN,eAAe,SAASE,IAAT,CAAeC,KAAf,EAAqB;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACIU,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAFgC,CAGhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIQ,KAAJ,EAAW;AACPE,MAAAA,WAAW,CAAC;AACRG,QAAAA,GAAG,EAAEL,KAAK,CAAC,CAAD,CAAL,CAASK,GADN;AAERC,QAAAA,GAAG,EAAEN,KAAK,CAAC,CAAD,CAAL,CAASO;AAFN,OAAD,CAAX;AAIH;AACJ,GAPQ,EAON,CAACP,KAAD,CAPM,CAAT;AAYI,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAnB,KADtB;AAEI,IAAA,aAAa,EACT;AACIR,MAAAA,GAAG,EAAEL,KAAK,CAAC,CAAD,CAAL,CAASK,GADlB;AAEIC,MAAAA,GAAG,EAAEN,KAAK,CAAC,CAAD,CAAL,CAASO;AAFlB,KAHR;AAOI,IAAA,WAAW,EAAE,EAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,KAAlC;AACS,IAAA,GAAG,EAAEP,KAAK,CAAC,CAAD,CAAL,CAASK,GADvB;AAES,IAAA,GAAG,EAAEL,KAAK,CAAC,CAAD,CAAL,CAASO,GAFvB;AAGS,IAAA,IAAI,EAAEP,KAAK,CAAC,CAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,CADJ;AA0BP;;GAjDuBD,I;;MAAAA,I","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nexport default function Gmap (props){\r\nconst [location, setLocation] = useState([])\r\n    console.log(props)\r\n    // const props = {\r\n    //     center: {\r\n    //         lat: 59.95,\r\n    //         lng: 30.33\r\n    //     },\r\n    //     zoom: 11\r\n    // };\r\n\r\n    useEffect(()=> {\r\n        if (props) {\r\n            setLocation({\r\n                lat: props[2].lat,\r\n                lng: props[2].lon\r\n            })\r\n        }\r\n    }, [props])\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div style={{ height: '100vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_API_KEY }}\r\n                    defaultCenter={\r\n                        {\r\n                            lat: props[2].lat,\r\n                            lng: props[2].lon\r\n                        }}\r\n                    defaultZoom={11}\r\n                >\r\n\r\n                    <Tooltip title='marker' placement=\"top\"\r\n                             lat={props[2].lat}\r\n                             lng={props[2].lon}\r\n                             text={props[0]}>\r\n                        {/*<AnyReactComponent*/}\r\n                        {/*    lat={props[2].lat}*/}\r\n                        {/*    lng={props[2].lon}*/}\r\n                        {/*    text={props[0]}*/}\r\n                        {/*/>*/}\r\n                    </Tooltip>\r\n\r\n                </GoogleMapReact>\r\n            </div>\r\n        );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}