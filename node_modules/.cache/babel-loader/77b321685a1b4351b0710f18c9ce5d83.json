{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Gmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nexport default function Gmap(props) {\n  _s();\n\n  const googleMapRef = useRef();\n  const [GoogleMapInfo, setGoogleMapInfo] = useState('');\n  let googleMap;\n  useEffect(() => {\n    const googleMapScript = document.createElement('script');\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\n    googleMapScript.async = true;\n    window.document.body.appendChild(googleMapScript);\n    googleMapScript.addEventListener('load', () => {\n      getLatLng();\n    });\n  }, []);\n\n  const createGoogleMap = coordinates => {\n    googleMap = new window.google.maps.Map(googleMapRef.current, {\n      zoom: 16,\n      center: {\n        lat: coordinates.lat(),\n        lng: coordinates.lng()\n      },\n      disableDefaultUI: true\n    });\n  };\n\n  const placeName = \"Podolsk\";\n\n  const getLatLng = () => {\n    let lat, lng, placeId;\n    new window.google.maps.Geocoder().geocode({\n      'address': `${placeName}`\n    }, function (results, status) {\n      if (status === window.google.maps.GeocoderStatus.OK) {\n        placeId = results[0].place_id;\n        createGoogleMap(results[0].geometry.location);\n        lat = results[0].geometry.location.lat();\n        lng = results[0].geometry.location.lng();\n        new window.google.maps.Marker({\n          position: {\n            lat,\n            lng\n          },\n          map: googleMap,\n          animation: window.google.maps.Animation.DROP,\n          title: `${placeName}`\n        });\n        setGoogleMapInfo({ ...GoogleMapInfo,\n          lat,\n          lng,\n          placeId,\n          isLoading: false,\n          googleMap\n        });\n      } else {\n        alert('Geocode was not successful for the following reason: ' + status);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"google-map\",\n    ref: googleMapRef,\n    style: {\n      width: '400px',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  });\n}\n\n_s(Gmap, \"cFMptuqbdFkSl9D9bkehSseEGko=\");\n\n_c = Gmap;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Gmap.js"],"names":["React","useRef","useEffect","useState","Gmap","props","googleMapRef","GoogleMapInfo","setGoogleMapInfo","googleMap","googleMapScript","document","createElement","src","process","env","REACT_APP_GOOGLE_API_KEY","async","window","body","appendChild","addEventListener","getLatLng","createGoogleMap","coordinates","google","maps","Map","current","zoom","center","lat","lng","disableDefaultUI","placeName","placeId","Geocoder","geocode","results","status","GeocoderStatus","OK","place_id","geometry","location","Marker","position","map","animation","Animation","DROP","title","isLoading","alert","width","height"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\r\n\r\n\r\nexport default function Gmap(props) {\r\n    const googleMapRef = useRef();\r\n    const [GoogleMapInfo, setGoogleMapInfo] = useState('')\r\n    let googleMap;\r\n\r\n    useEffect(() => {\r\n        const googleMapScript = document.createElement('script');\r\n        googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\r\n        googleMapScript.async = true;\r\n        window.document.body.appendChild(googleMapScript);\r\n        googleMapScript.addEventListener('load', () => {\r\n            getLatLng();\r\n        });\r\n    }, [])\r\n\r\n    const createGoogleMap = (coordinates) => {\r\n        googleMap = new window.google.maps.Map(googleMapRef.current, {\r\n            zoom: 16,\r\n            center: {\r\n                lat: coordinates.lat(),\r\n                lng: coordinates.lng(),\r\n            },\r\n            disableDefaultUI: true,\r\n        })\r\n    };\r\n\r\n    const placeName = \"Podolsk\"\r\n\r\n    const getLatLng = () => {\r\n        let lat, lng, placeId;\r\n        new window.google.maps.Geocoder().geocode({ 'address': `${placeName}` }, function (results, status) {\r\n            if (status === window.google.maps.GeocoderStatus.OK) {\r\n                placeId = results[0].place_id;\r\n                createGoogleMap(results[0].geometry.location);\r\n                lat = results[0].geometry.location.lat();\r\n                lng = results[0].geometry.location.lng();\r\n                new window.google.maps.Marker({\r\n                    position: { lat, lng },\r\n                    map: googleMap,\r\n                    animation: window.google.maps.Animation.DROP,\r\n                    title: `${placeName}`\r\n                });\r\n                setGoogleMapInfo({ ...GoogleMapInfo, lat, lng, placeId, isLoading: false, googleMap });\r\n            } else {\r\n                alert('Geocode was not successful for the following reason: ' + status);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div\r\n            id=\"google-map\"\r\n            ref={googleMapRef}\r\n            style={{width: '400px', height: '300px'}}/>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}