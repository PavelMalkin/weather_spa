{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\SavedCities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCurrentCity } from \"../redux/actions/citiesActions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function SavedCities(props) {\n  _s();\n\n  const classes = useStyles();\n  const cities = useSelector(store => store.cities.savedCities);\n  const dispatch = useDispatch(); // const svCities = cities.map( (city, index) => {\n  //     return (\n  //         <Grid item key={index+100}>\n  //             <Button className={classes.button}\n  //                     onclick={ console.log('city',city[0])}\n  //             >{city[0]}</Button>\n  //         </Grid>\n  //     )\n  // })\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    onclick: () => console.log('city', props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, props);\n}\n\n_s(SavedCities, \"d/Tvj/moaep+KCFRyWZKTGqL1Fk=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = SavedCities;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedCities\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/SavedCities.js"],"names":["React","useEffect","useState","useSelector","useDispatch","setCurrentCity","makeStyles","Grid","Button","useStyles","theme","root","flexGrow","button","padding","spacing","textAlign","color","palette","text","secondary","SavedCities","props","classes","cities","store","savedCities","dispatch","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAR,QAA6B,gCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADL;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHtB;AAJ6B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,WAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAMe,MAAM,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,WAAvB,CAA1B;AACA,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B,CAHyC,CAMzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEmB,OAAO,CAACV,MAA3B;AACQ,IAAA,OAAO,EAAE,MAAMe,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBP,KAAnB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEA,KAFF,CADJ;AAKH;;GArBuBD,W;UACJZ,S,EACDN,W,EACEC,W;;;KAHGiB,W;AAqBvB","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {setCurrentCity} from \"../redux/actions/citiesActions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    button: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function SavedCities  (props) {\r\n    const classes = useStyles();\r\n    const cities = useSelector(store => store.cities.savedCities);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // const svCities = cities.map( (city, index) => {\r\n    //     return (\r\n    //         <Grid item key={index+100}>\r\n    //             <Button className={classes.button}\r\n    //                     onclick={ console.log('city',city[0])}\r\n    //             >{city[0]}</Button>\r\n    //         </Grid>\r\n    //     )\r\n    // })\r\n\r\n    return (\r\n        <Button className={classes.button}\r\n                onclick={() => console.log('city',props)}\r\n        >{props}</Button>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}