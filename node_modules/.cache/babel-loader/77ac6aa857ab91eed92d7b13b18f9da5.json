{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCityName, getCurrentWeather } from \"../appThunk\";\nimport { saveCity } from \"../actions/citiesActions\";\nconst initialState = {\n  currentCity: '',\n  savedCities: [{\n    city: 'Moscow',\n    countryCode: 'RU',\n    location: {\n      lat: 55.755826,\n      lon: 37.6172999\n    }\n  }, {\n    city: 'Barcelona',\n    countryCode: 'ES',\n    location: {\n      lat: 41.3850639,\n      lon: 2.1734035\n    }\n  }, {\n    city: 'Haifa',\n    countryCode: 'IL',\n    location: {\n      lat: 32.82,\n      lon: 34.99\n    }\n  }, {\n    city: 'New York',\n    countryCode: 'US',\n    location: {\n      lat: 40.7127753,\n      lon: -74.0059728\n    }\n  }, {\n    city: 'Podolsk',\n    countryCode: 'RU',\n    location: {\n      lat: 55.4312453,\n      lon: 37.5457647\n    }\n  }]\n};\nconst citiesReducer = createReducer(initialState, {\n  // [getCityName.pending]: (state) => {\n  //     state.isFetching = true;\n  //     return state;\n  // },\n  // [getCityName.rejected]: (state, action) => {\n  //     state.isFetching = false;\n  //     state.error = action.error.message;\n  //     return state;\n  // },\n  // [getCityName.fulfilled]: (state, action) => {\n  //     state.isFetching = false;\n  //     state.hasFetched = true;\n  //     state.currentCity =  action.payload;\n  //     return state;\n  // },\n  [saveCity]: (state, action) => {\n    console.log('saveCity fired', action.payload);\n    state.savedCities = [...state.savedCities, ...[action.payload]];\n    return state;\n  }\n});\nexport default citiesReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/citiesReducer.js"],"names":["createReducer","getCityName","getCurrentWeather","saveCity","initialState","currentCity","savedCities","city","countryCode","location","lat","lon","citiesReducer","state","action","console","log","payload"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,WAAR,EAAqBC,iBAArB,QAA6C,aAA7C;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,WAAW,EAAE,CACT;AAACC,IAAAA,IAAI,EAAC,QAAN;AAAeC,IAAAA,WAAW,EAAE,IAA5B;AAAkCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,SAAL;AAAgBC,MAAAA,GAAG,EAAC;AAApB;AAA3C,GADS,EAET;AAACJ,IAAAA,IAAI,EAAC,WAAN;AAAkBC,IAAAA,WAAW,EAAE,IAA/B;AAAqCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,UAAL;AAAiBC,MAAAA,GAAG,EAAC;AAArB;AAA9C,GAFS,EAGT;AAACJ,IAAAA,IAAI,EAAC,OAAN;AAAcC,IAAAA,WAAW,EAAE,IAA3B;AAAiCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,KAAL;AAAYC,MAAAA,GAAG,EAAC;AAAhB;AAA1C,GAHS,EAIT;AAACJ,IAAAA,IAAI,EAAC,UAAN;AAAiBC,IAAAA,WAAW,EAAE,IAA9B;AAAoCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,UAAL;AAAiBC,MAAAA,GAAG,EAAC,CAAC;AAAtB;AAA7C,GAJS,EAKT;AAACJ,IAAAA,IAAI,EAAC,SAAN;AAAgBC,IAAAA,WAAW,EAAE,IAA7B;AAAmCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,UAAL;AAAiBC,MAAAA,GAAG,EAAC;AAArB;AAA5C,GALS;AAFI,CAArB;AAWA,MAAMC,aAAa,GAAGZ,aAAa,CAACI,YAAD,EAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAACD,QAAD,GAAY,CAACU,KAAD,EAAQC,MAAR,KAAmB;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAAM,CAACG,OAArC;AACAJ,IAAAA,KAAK,CAACP,WAAN,GAAoB,CAAC,GAAGO,KAAK,CAACP,WAAV,EAAuB,GAAG,CAACQ,MAAM,CAACG,OAAR,CAA1B,CAApB;AACA,WAAOJ,KAAP;AACH;AArB6C,CAAf,CAAnC;AAyBA,eAAeD,aAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCityName, getCurrentWeather} from \"../appThunk\";\r\nimport {saveCity} from \"../actions/citiesActions\";\r\n\r\n\r\nconst initialState = {\r\n    currentCity: '',\r\n    savedCities: [\r\n        {city:'Moscow',countryCode: 'RU', location:{lat:55.755826, lon:37.6172999} },\r\n        {city:'Barcelona',countryCode: 'ES', location:{lat:41.3850639, lon:2.1734035} },\r\n        {city:'Haifa',countryCode: 'IL', location:{lat:32.82, lon:34.99} },\r\n        {city:'New York',countryCode: 'US', location:{lat:40.7127753, lon:-74.0059728} },\r\n        {city:'Podolsk',countryCode: 'RU', location:{lat:55.4312453, lon:37.5457647} },\r\n    ],\r\n};\r\n\r\nconst citiesReducer = createReducer(initialState, {\r\n    // [getCityName.pending]: (state) => {\r\n    //     state.isFetching = true;\r\n    //     return state;\r\n    // },\r\n    // [getCityName.rejected]: (state, action) => {\r\n    //     state.isFetching = false;\r\n    //     state.error = action.error.message;\r\n    //     return state;\r\n    // },\r\n    // [getCityName.fulfilled]: (state, action) => {\r\n    //     state.isFetching = false;\r\n    //     state.hasFetched = true;\r\n    //     state.currentCity =  action.payload;\r\n    //     return state;\r\n    // },\r\n\r\n    [saveCity]: (state, action) => {\r\n        console.log('saveCity fired', action.payload)\r\n        state.savedCities = [...state.savedCities, ...[action.payload]]\r\n        return state;\r\n    },\r\n\r\n})\r\n\r\nexport default citiesReducer;"]},"metadata":{},"sourceType":"module"}