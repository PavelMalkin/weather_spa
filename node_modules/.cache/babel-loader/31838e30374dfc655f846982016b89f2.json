{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCurrentWeather, getForecast } from \"./appThunk\";\nconst initialState = {\n  savedCities: [],\n  actualCity: [],\n  currentWeather: {},\n  hasFetched: false,\n  isFetching: false,\n  isFetchingError: null\n};\nconst appReducer = createReducer(initialState, {\n  [getCurrentWeather.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getCurrentWeather.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getCurrentWeather.fulfilled]: (state, action) => {\n    console.log(action.payload);\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.currentWeather = action.payload; // state.currentWeather.concat(action.payload);\n\n    console.log('state', state.toJSON());\n    return state;\n  }\n});\nexport default appReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/app/appReducer.js"],"names":["createReducer","getCurrentWeather","getForecast","initialState","savedCities","actualCity","currentWeather","hasFetched","isFetching","isFetchingError","appReducer","pending","state","rejected","action","error","message","fulfilled","console","log","payload","toJSON"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,iBAAR,EAA2BC,WAA3B,QAA6C,YAA7C;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,cAAc,EAAE,EAHG;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,UAAU,EAAE,KALO;AAMnBC,EAAAA,eAAe,EAAE;AANE,CAArB;AASA,MAAMC,UAAU,GAAGV,aAAa,CAACG,YAAD,EAAe;AAC7C,GAACF,iBAAiB,CAACU,OAAnB,GAA8BC,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACA,WAAOI,KAAP;AACD,GAJ4C;AAK7C,GAACX,iBAAiB,CAACY,QAAnB,GAA8B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/CF,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACG,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOJ,KAAP;AACD,GAT4C;AAU7C,GAACX,iBAAiB,CAACgB,SAAnB,GAA+B,CAACL,KAAD,EAAQE,MAAR,KAAmB;AAChDI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,OAAnB;AACAR,IAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,IAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACAK,IAAAA,KAAK,CAACN,cAAN,GAAwBQ,MAAM,CAACM,OAA/B,CAJgD,CAK5C;;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAAK,CAACS,MAAN,EAArB;AACA,WAAOT,KAAP;AACD;AAlB4C,CAAf,CAAhC;AAqBA,eAAeF,UAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCurrentWeather, getForecast} from \"./appThunk\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  savedCities: [],\r\n  actualCity: [],\r\n  currentWeather: {},\r\n  hasFetched: false,\r\n  isFetching: false,\r\n  isFetchingError: null\r\n};\r\n\r\nconst appReducer = createReducer(initialState, {\r\n  [getCurrentWeather.pending]: (state) => {\r\n    state.isFetching = true;\r\n    return state;\r\n  },\r\n  [getCurrentWeather.rejected]: (state, action) => {\r\n    state.isFetching = false;\r\n    state.error = action.error.message;\r\n    return state;\r\n  },\r\n  [getCurrentWeather.fulfilled]: (state, action) => {\r\n    console.log(action.payload)\r\n    state.isFetching = false;\r\n    state.hasFetched = true;\r\n    state.currentWeather =  action.payload;\r\n        // state.currentWeather.concat(action.payload);\r\n    console.log('state', state.toJSON())\r\n    return state;\r\n  }\r\n})\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}