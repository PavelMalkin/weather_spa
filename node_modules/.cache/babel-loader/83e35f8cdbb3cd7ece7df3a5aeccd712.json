{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\elementary\\\\ForecastItems.js\";\nimport React from 'react';\nimport { CardContent, Grid, Typography } from \"@material-ui/core\";\nimport Moment from \"moment\";\nimport Card from \"@material-ui/core/Card\";\nexport function ForecastItems(props) {\n  console.log('props in items', props); // const oneDayForecast = props.forecastWeather.list[props.forecastPeriod - 1]\n\n  const forecastCards = props.forecastPeriod === 7 ? props.weather.daily.map((day, index) => {\n    return (\n      /*#__PURE__*/\n      // <Grid item key={(index + 1) * 1000}>\n      React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        align: \"center\",\n        variant: \"subtitle2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      }, Moment.unix(day.dt).format('ddd, MMM DD HH:mm')), /*#__PURE__*/React.createElement(Typography, {\n        align: \"center\",\n        variant: \"subtitle2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, Math.floor(day.temp - 273.15, 1), \" C\"), /*#__PURE__*/React.createElement(Typography, {\n        align: \"center\",\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, \"Wind \", day.wind_speed, \" m/s\"))) // {/*</Grid>*/}\n\n    );\n  }) : null // <Grid item>\n  //     <Card>\n  //         <CardContent>\n  //             <Typography align='center'\n  //                         variant='subtitle2'>{Moment().add(props.forecastPeriod, 'days').format('ddd, MMM DD')}</Typography>\n  //             <Typography align='center'\n  //                         variant='subtitle2'>{Math.floor(oneDayForecast.main.temp - 273.15, 1)} C</Typography>\n  //             <Typography align='center' variant='caption'>Wind {oneDayForecast.wind.speed} m/s</Typography>\n  //         </CardContent>\n  //     </Card>\n  // </Grid>\n  ;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, Moment().add(props.forecastPeriod - 1, 'days').calendar(null, {\n    sameDay: '[Today]',\n    nextDay: '[Tomorrow]',\n    nextWeek: 'dddd',\n    sameElse: 'L'\n  })), forecastCards);\n}\n_c = ForecastItems;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastItems\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/elementary/ForecastItems.js"],"names":["React","CardContent","Grid","Typography","Moment","Card","ForecastItems","props","console","log","forecastCards","forecastPeriod","weather","daily","map","day","index","unix","dt","format","Math","floor","temp","wind_speed","add","calendar","sameDay","nextDay","nextWeek","sameElse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,IAArB,EAA2BC,UAA3B,QAA4C,mBAA5C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAIA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,EADiC,CAGjC;;AAEA,QAAMG,aAAa,GAAIH,KAAK,CAACI,cAAN,KAAyB,CAA1B,GAA+BJ,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBC,GAApB,CAAwB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzF;AAAA;AACI;AACI,0BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,QAAlB;AACY,QAAA,OAAO,EAAC,WADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACiCZ,MAAM,CAACa,IAAP,CAAYF,GAAG,CAACG,EAAhB,EAAoBC,MAApB,CAA2B,mBAA3B,CADjC,CADJ,eAGI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,QAAlB;AACY,QAAA,OAAO,EAAC,WADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACiCC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,IAAJ,GAAW,MAAtB,EAA8B,CAA9B,CADjC,OAHJ,eAKI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmDP,GAAG,CAACQ,UAAvD,SALJ,CADJ,CAFR,CAWK;;AAXL;AAaH,GAdoD,CAA/B,GAcf,IAde,CAelB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBJ;AA4BA,sBAEY,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,eAApC;AACM,IAAA,UAAU,EAAC,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,MAAM,GAAGoB,GAAT,CAAajB,KAAK,CAACI,cAAN,GAAuB,CAApC,EAAuC,MAAvC,EAA+Cc,QAA/C,CAAwD,IAAxD,EAA6D;AAC1DC,IAAAA,OAAO,EAAG,SADgD;AAE1DC,IAAAA,OAAO,EAAG,YAFgD;AAG1DC,IAAAA,QAAQ,EAAG,MAH+C;AAI1DC,IAAAA,QAAQ,EAAG;AAJ+C,GAA7D,CADL,CAFJ,EAUKnB,aAVL,CAFZ;AAgBH;KAjDeJ,a;AAiDf","sourcesContent":["import React from 'react';\r\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport Moment from \"moment\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\n\r\n\r\nexport function ForecastItems(props) {\r\n    console.log('props in items', props)\r\n\r\n    // const oneDayForecast = props.forecastWeather.list[props.forecastPeriod - 1]\r\n\r\n    const forecastCards = (props.forecastPeriod === 7) ? props.weather.daily.map((day, index) => {\r\n        return (\r\n            // <Grid item key={(index + 1) * 1000}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography align='center'\r\n                                    variant='subtitle2'>{Moment.unix(day.dt).format('ddd, MMM DD HH:mm')}</Typography>\r\n                        <Typography align='center'\r\n                                    variant='subtitle2'>{Math.floor(day.temp - 273.15, 1)} C</Typography>\r\n                        <Typography align='center' variant='caption'>Wind {day.wind_speed} m/s</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n             // {/*</Grid>*/}\r\n        )\r\n    }) : ( null\r\n        // <Grid item>\r\n        //     <Card>\r\n        //         <CardContent>\r\n        //             <Typography align='center'\r\n        //                         variant='subtitle2'>{Moment().add(props.forecastPeriod, 'days').format('ddd, MMM DD')}</Typography>\r\n        //             <Typography align='center'\r\n        //                         variant='subtitle2'>{Math.floor(oneDayForecast.main.temp - 273.15, 1)} C</Typography>\r\n        //             <Typography align='center' variant='caption'>Wind {oneDayForecast.wind.speed} m/s</Typography>\r\n        //         </CardContent>\r\n        //     </Card>\r\n        // </Grid>\r\n    );\r\n\r\n    return (\r\n\r\n                <Grid container spacing={2} justify=\"space-between\"\r\n                      alignItems=\"flex-start\">\r\n                    <Typography>\r\n                        {Moment().add(props.forecastPeriod - 1, 'days').calendar(null,{\r\n                            sameDay : '[Today]',\r\n                            nextDay : '[Tomorrow]',\r\n                            nextWeek : 'dddd',\r\n                            sameElse : 'L'\r\n                        })}\r\n                    </Typography>\r\n                    {forecastCards}\r\n                </Grid>\r\n\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}