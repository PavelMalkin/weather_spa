{"ast":null,"code":"import _defineProperty from\"C:/dev/react/weather_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _createReducer;import{createReducer}from\"@reduxjs/toolkit\";import{getWeather}from\"../appThunk\";import{dropWeather,setForecast}from\"../actions/weatherActions\";var initialState={weather:{current:[],daily:[],hourly:[]},forecastPeriod:7,hasFetched:false,isFetching:false,isFetchingError:null};var weatherReducer=createReducer(initialState,(_createReducer={},_defineProperty(_createReducer,getWeather.pending,function(state){state.isFetching=true;state.hasFetched=false;return state;}),_defineProperty(_createReducer,getWeather.rejected,function(state,action){state.isFetching=false;state.error=action.error.message;return state;}),_defineProperty(_createReducer,getWeather.fulfilled,function(state,action){state.isFetching=false;state.hasFetched=true;state.weather=action.payload;return state;}),_defineProperty(_createReducer,setForecast,function(state,action){state.forecastPeriod=action.payload;return state;}),_defineProperty(_createReducer,dropWeather,function(state){state.weather={current:[],daily:[],hourly:[]};state.isFetching=false;state.hasFetched=false;return state;}),_createReducer));export default weatherReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/weatherReducer.js"],"names":["createReducer","getWeather","dropWeather","setForecast","initialState","weather","current","daily","hourly","forecastPeriod","hasFetched","isFetching","isFetchingError","weatherReducer","pending","state","rejected","action","error","message","fulfilled","payload"],"mappings":"oKAAA,OAAQA,aAAR,KAA4B,kBAA5B,CACA,OAAQC,UAAR,KAAyB,aAAzB,CACA,OAAQC,WAAR,CAAsBC,WAAtB,KAAwC,2BAAxC,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAE,CACLC,OAAO,CAAE,EADJ,CAELC,KAAK,CAAE,EAFF,CAGLC,MAAM,CAAE,EAHH,CADQ,CAMjBC,cAAc,CAAE,CANC,CAOjBC,UAAU,CAAE,KAPK,CAQjBC,UAAU,CAAE,KARK,CASjBC,eAAe,CAAE,IATA,CAArB,CAYA,GAAMC,CAAAA,cAAc,CAAGb,aAAa,CAACI,YAAD,mDAC/BH,UAAU,CAACa,OADoB,CACV,SAACC,KAAD,CAAW,CAC7BA,KAAK,CAACJ,UAAN,CAAmB,IAAnB,CACAI,KAAK,CAACL,UAAN,CAAmB,KAAnB,CACA,MAAOK,CAAAA,KAAP,CACH,CAL+B,iCAM/Bd,UAAU,CAACe,QANoB,CAMT,SAACD,KAAD,CAAQE,MAAR,CAAmB,CACtCF,KAAK,CAACJ,UAAN,CAAmB,KAAnB,CACAI,KAAK,CAACG,KAAN,CAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B,CACA,MAAOJ,CAAAA,KAAP,CACH,CAV+B,iCAW/Bd,UAAU,CAACmB,SAXoB,CAWR,SAACL,KAAD,CAAQE,MAAR,CAAmB,CACvCF,KAAK,CAACJ,UAAN,CAAmB,KAAnB,CACAI,KAAK,CAACL,UAAN,CAAmB,IAAnB,CACAK,KAAK,CAACV,OAAN,CAAiBY,MAAM,CAACI,OAAxB,CACA,MAAON,CAAAA,KAAP,CACH,CAhB+B,iCAiB/BZ,WAjB+B,CAiBhB,SAACY,KAAD,CAAQE,MAAR,CAAmB,CAC/BF,KAAK,CAACN,cAAN,CAAuBQ,MAAM,CAACI,OAA9B,CACA,MAAON,CAAAA,KAAP,CACH,CApB+B,iCAqB/Bb,WArB+B,CAqBhB,SAACa,KAAD,CAAW,CACvBA,KAAK,CAACV,OAAN,CAAgB,CACZC,OAAO,CAAE,EADG,CAEZC,KAAK,CAAE,EAFK,CAGZC,MAAM,CAAE,EAHI,CAAhB,CAKAO,KAAK,CAACJ,UAAN,CAAmB,KAAnB,CACAI,KAAK,CAACL,UAAN,CAAmB,KAAnB,CACA,MAAOK,CAAAA,KAAP,CACH,CA9B+B,kBAApC,CAiCA,cAAeF,CAAAA,cAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getWeather} from \"../appThunk\";\r\nimport {dropWeather , setForecast} from \"../actions/weatherActions\";\r\n\r\n\r\nconst initialState = {\r\n    weather: {\r\n        current: [],\r\n        daily: [],\r\n        hourly: []\r\n    },\r\n    forecastPeriod: 7,\r\n    hasFetched: false,\r\n    isFetching: false,\r\n    isFetchingError: null\r\n};\r\n\r\nconst weatherReducer = createReducer(initialState, {\r\n    [getWeather.pending]: (state) => {\r\n        state.isFetching = true;\r\n        state.hasFetched = false;\r\n        return state;\r\n    },\r\n    [getWeather.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getWeather.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.weather =  action.payload;\r\n        return state;\r\n    },\r\n    [setForecast] : (state, action) => {\r\n        state.forecastPeriod = action.payload\r\n        return state;\r\n    },\r\n    [dropWeather] : (state) => {\r\n        state.weather = {\r\n            current: [],\r\n            daily: [],\r\n            hourly: []\r\n        };\r\n        state.isFetching = false;\r\n        state.hasFetched = false;\r\n        return state;\r\n    }\r\n})\r\n\r\nexport default weatherReducer;"]},"metadata":{},"sourceType":"module"}