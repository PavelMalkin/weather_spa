{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\basic\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveCity } from \"../../redux/actions/citiesActions\"; // Material\n\nimport Paper from '@material-ui/core/Paper';\nimport { CardContent, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nexport default function Main(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const weather = useSelector(store => store.weather);\n  const savedCities = useSelector(store => store.cities.savedCities);\n  const Weather = weather.hasFetched ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, Math.floor(weather.weather.current.temp - 273.15, 1), \" \\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, props.actualLocation.city, \", \", props.actualLocation.countryCode), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, weather.weather.current.weather[0].description, \", Wind \", weather.weather.current.wind_speed, \" meters per second\"))) : null;\n\n  const handleButton = () => {\n    if (!savedCities.find(city => city.city === props.actualLocation.city)) {\n      dispatch(saveCity([props.actualLocation]));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: {\n      minHeight: '15vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), Weather, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  })))))));\n}\n\n_s(Main, \"tiBGCZBIwSojxcBmExbO3FYmVkQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/basic/Main.js"],"names":["React","useSelector","useDispatch","saveCity","Paper","CardContent","Grid","IconButton","Typography","AddCircleOutlineIcon","Main","props","dispatch","weather","store","savedCities","cities","Weather","hasFetched","Math","floor","current","temp","actualLocation","city","countryCode","description","wind_speed","handleButton","find","minHeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {saveCity} from \"../../redux/actions/citiesActions\";\r\n// Material\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {CardContent, Grid, IconButton, Typography} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\n\r\nexport default function Main(props) {\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.weather);\r\n    const savedCities = useSelector(store => store.cities.savedCities)\r\n\r\n    const Weather = (weather.hasFetched) ? (<Grid item>\r\n            <CardContent>\r\n                <Typography align='center'\r\n                            variant='h5'>{Math.floor(weather.weather.current.temp - 273.15, 1)} Â°C</Typography>\r\n                <Typography align='center'\r\n                            variant='h4'>{props.actualLocation.city}, {props.actualLocation.countryCode}</Typography>\r\n                <Typography align='center' variant='h6'>{weather.weather.current.weather[0].description}, Wind {weather.weather.current.wind_speed} meters per\r\n                    second</Typography>\r\n            </CardContent>\r\n        </Grid>)\r\n        : null;\r\n\r\n    const handleButton = () => {\r\n        if (!savedCities.find(city => city.city === props.actualLocation.city)) {\r\n        dispatch(saveCity([props.actualLocation]))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} style={{minHeight: '15vh'}}>\r\n            <Grid container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\">\r\n                <Grid item>\r\n                </Grid>\r\n                {Weather}\r\n                <Grid item>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <IconButton onClick={handleButton}>\r\n                                <AddCircleOutlineIcon/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}