{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Forecast.js\";\nimport React from 'react';\nimport Gmap from \"./Gmap\";\nimport Moment from 'moment';\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { ForecastCard } from \"./elementary/ForecastCard\";\nexport function Forecast(props) {\n  const forecastItems = props.hasFetched ? props.weather.daily.map((day, index) => /*#__PURE__*/React.createElement(ForecastCard, Object.assign({\n    key: index + 10000\n  }, day, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 49\n    }\n  }))) : null;\n  let forecastHours = props.hasFetched && props.forecastPeriod < 7 ? props.weather.hourly.map(forecast => {\n    if (Moment.unix(forecast.dt).format('DD') === Moment().add(props.forecastPeriod - 1, 'days').format('DD') && Moment.unix(forecast.dt).format('HH') % 6 === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: forecast.dt,\n        className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, \" \", Moment.unix(forecast.dt).format('HH:mm '), \" \"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, \" \", Math.floor(forecast.temp - 273.15, 1), \"\\xB0C,\"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, \"  \", forecast.weather[0].description, \",\"), /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }, \" Wind - \", forecast.wind_speed, \" m/s\"));\n    }\n  }) : null;\n  const typeForecast = props.hasFetched && props.forecastPeriod < 7 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, Moment().add(props.forecastPeriod - 1, 'days').calendar(null, {\n    sameDay: '[Today]',\n    nextDay: '[Tomorrow]',\n    nextWeek: 'dddd',\n    sameElse: 'L'\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, Moment().add(props.forecastPeriod - 1, 'days').format('MMMM, DD'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Weather\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delimiter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), forecastHours) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, props.forecastPeriod < 7 ? null : forecastItems));\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, typeForecast, props.forecastPeriod < 7 ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Gmap, Object.assign({}, props.actualLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }))) : null);\n}\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Forecast.js"],"names":["React","Gmap","Moment","Grid","Typography","ForecastCard","Forecast","props","forecastItems","hasFetched","weather","daily","map","day","index","forecastHours","forecastPeriod","hourly","forecast","unix","dt","format","add","Math","floor","temp","description","wind_speed","typeForecast","calendar","sameDay","nextDay","nextWeek","sameElse","actualLocation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Gmap from \"./Gmap\";\r\nimport Moment from 'moment';\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {ForecastCard} from \"./elementary/ForecastCard\";\r\n\r\nexport function Forecast(props) {\r\n\r\n    const forecastItems = (props.hasFetched) ? (\r\n        props.weather.daily.map((day, index) => <ForecastCard key={index + 10000} {...day}/>)\r\n    ) : null;\r\n\r\n\r\n    let forecastHours = (props.hasFetched && props.forecastPeriod < 7) ? (\r\n        props.weather.hourly.map(forecast => {\r\n            if (Moment.unix(forecast.dt).format('DD') === Moment().add(props.forecastPeriod - 1, 'days').format('DD') &&\r\n                Moment.unix(forecast.dt).format('HH') % 6 === 0) {\r\n                return (\r\n                    <div key={forecast.dt} className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                        <Typography> {Moment.unix(forecast.dt).format('HH:mm ')} </Typography>\r\n                        <Typography> {Math.floor(forecast.temp - 273.15, 1)}°C,</Typography>\r\n                        <Typography>  {forecast.weather[0].description},</Typography>\r\n                        <Typography> Wind - {forecast.wind_speed} m/s</Typography>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    ) : null;\r\n\r\n    const typeForecast = (props.hasFetched && props.forecastPeriod < 7) ? (\r\n        <div>\r\n            <div className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                <Typography variant='h5'>\r\n                    {Moment().add(props.forecastPeriod - 1, 'days').calendar(null, {\r\n                        sameDay: '[Today]',\r\n                        nextDay: '[Tomorrow]',\r\n                        nextWeek: 'dddd',\r\n                        sameElse: 'L'\r\n                    })}\r\n                </Typography>\r\n            </div>\r\n            <div className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                <Typography>\r\n                    {Moment().add(props.forecastPeriod - 1, 'days').format('MMMM, DD')}\r\n                </Typography>\r\n            </div>\r\n            <div className='Wizard_DetailedWeather_hourlyForecast_item'>\r\n                <Typography>Time</Typography>\r\n                <Typography>Weather</Typography>\r\n            </div>\r\n            <div className='delimiter'>\r\n                <hr className=\"solid\"/>\r\n            </div>\r\n            {forecastHours}\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Grid container spacing={2} justify=\"flex-start\">\r\n                {(props.forecastPeriod < 7) ? null : forecastItems}\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Grid container spacing={2}\r\n              justify=\"space-between\"\r\n        >\r\n            {typeForecast}\r\n\r\n            {(props.forecastPeriod < 7) ?\r\n                <Grid item xs={8}>\r\n                    <Gmap {...props.actualLocation}/>\r\n                </Grid>\r\n                : null}\r\n        </Grid>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}