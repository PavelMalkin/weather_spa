{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { v4 as uuid } from 'uuid';\nimport { Home } from './components/main/Home';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCurrentWeatherByCoord, getWeather } from './redux/appThunk';\nimport SavedCities from \"./components/basic/SavedCities\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { saveCity } from \"./redux/actions/citiesActions\";\nimport { DetailedWeather } from \"./components/main/DetailedWeather\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const weather = useSelector(store => store.weather);\n  const savedCities = useSelector(store => store.cities);\n  const location = useSelector(store => store.location);\n  useEffect(() => {\n    if (!location.hasFetched && !location.isFetching) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          dispatch(getCurrentWeatherByCoord([position.coords.latitude, position.coords.longitude]));\n        }, () => {\n          console.log('location error');\n        });\n      } else {\n        console.log('Browser doesnt support Geolocation');\n      }\n    }\n  }, [dispatch, location]);\n  useEffect(() => {\n    if (localStorage.getItem('savedCities') && !savedCities.hasFetched) {\n      dispatch(saveCity(JSON.parse(localStorage.getItem('savedCities'))));\n    } else {\n      localStorage.setItem('savedCities', JSON.stringify(savedCities.savedCities));\n    }\n  }, [savedCities]);\n  useEffect(() => {\n    if (!weather.hasFetched && !weather.isFetchingError && !weather.isFetching && location.hasFetched) {\n      dispatch(getWeather(location.actualLocation.location));\n    }\n  }, [weather, location]);\n  const home = useMemo(() => /*#__PURE__*/React.createElement(Home, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 32\n    }\n  }), [location]);\n  const routes = useMemo(() => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: () => home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), savedCities.savedCities.map(city => {\n      return /*#__PURE__*/React.createElement(Route, {\n        key: v4(),\n        path: `/${city.city}`,\n        component: () => /*#__PURE__*/React.createElement(DetailedWeather, {\n          location: location,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 57\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      });\n    })));\n  }, [savedCities.savedCities, home, location]);\n  const cities = useMemo(() => /*#__PURE__*/React.createElement(SavedCities, Object.assign({}, savedCities, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 34\n    }\n  })), [savedCities]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, routes, cities));\n}\n\n_s(App, \"7Q72YFmZ1r6Xl5YVwx3DGrgylIQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/App.js"],"names":["React","useEffect","useMemo","BrowserRouter","Router","Switch","Route","v4","uuid","Home","useSelector","useDispatch","getCurrentWeatherByCoord","getWeather","SavedCities","makeStyles","saveCity","DetailedWeather","App","dispatch","weather","store","savedCities","cities","location","hasFetched","isFetching","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","localStorage","getItem","JSON","parse","setItem","stringify","isFetchingError","actualLocation","home","routes","map","city"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport {v4 as uuid} from 'uuid'\r\n\r\n\r\nimport {Home} from './components/main/Home'\r\n\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getCurrentWeatherByCoord, getWeather} from './redux/appThunk'\r\nimport SavedCities from \"./components/basic/SavedCities\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {saveCity} from \"./redux/actions/citiesActions\";\r\nimport {DetailedWeather} from \"./components/main/DetailedWeather\";\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.weather)\r\n    const savedCities = useSelector(store => store.cities)\r\n    const location = useSelector(store => store.location);\r\n\r\n    useEffect(() => {\r\n        if (!location.hasFetched && !location.isFetching) {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        dispatch(getCurrentWeatherByCoord([position.coords.latitude, position.coords.longitude]));\r\n                    },\r\n                    () => {\r\n                        console.log('location error')\r\n                    }\r\n                );\r\n            } else {\r\n                console.log('Browser doesnt support Geolocation')\r\n            }\r\n        }\r\n    }, [dispatch, location]);\r\n\r\n    useEffect(() => {\r\n            if (localStorage.getItem('savedCities') && !savedCities.hasFetched) {\r\n                dispatch(saveCity(JSON.parse(localStorage.getItem('savedCities'))))\r\n            } else {\r\n                localStorage.setItem('savedCities', JSON.stringify(savedCities.savedCities))\r\n            }\r\n        },\r\n        [savedCities])\r\n\r\n    useEffect(() => {\r\n        if (!weather.hasFetched && !weather.isFetchingError && !weather.isFetching && location.hasFetched) {\r\n            dispatch(getWeather(location.actualLocation.location))\r\n        }\r\n    }, [weather, location]);\r\n\r\n    const home = useMemo(() => <Home location={location}/>, [location])\r\n\r\n    const routes = (useMemo(() => {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={() => home}/>\r\n                    {savedCities.savedCities.map(city => {\r\n                        return (<Route key={v4()} path={`/${city.city}`}\r\n                                       component={() => <DetailedWeather location={location}/>}/>)\r\n                    })}\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }, [savedCities.savedCities, home, location]))\r\n\r\n\r\n    const cities = useMemo(() => <SavedCities {...savedCities}/>, [savedCities])\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                {routes}\r\n                {cities}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}