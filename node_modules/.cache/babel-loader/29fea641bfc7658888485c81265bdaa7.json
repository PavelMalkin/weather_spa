{"ast":null,"code":"// import {createReducer} from \"@reduxjs/toolkit\";\n// import {getForecast} from \"../appThunk\";\n// import {setForecast, dropForecastWeather} from \"../actions/weatherActions\";\n//\n//\n// const initialState = {\n//     forecastWeather: {},\n//     forecastPeriod: 7,\n//     hasFetched: false,\n//     isFetching: false,\n//     isFetchingError: null\n// };\n//\n// const forecastReducer = createReducer(initialState, {\n//     [getForecast.pending]: (state) => {\n//         state.isFetching = true;\n//         return state;\n//     },\n//     [getForecast.rejected]: (state, action) => {\n//         state.isFetching = false;\n//         state.error = action.error.message;\n//         return state;\n//     },\n//     [getForecast.fulfilled]: (state, action) => {\n//         state.isFetching = false;\n//         state.hasFetched = true;\n//         state.forecastWeather =  action.payload;\n//         return state;\n//     },\n//     [setForecast] : (state, action) => {\n//         state.forecastPeriod = action.payload\n//         return state;\n//     },\n//     [dropForecastWeather]: (state) => {\n//         state.isFetching = false;\n//         state.hasFetched = false;\n//         state.forecastWeather = {};\n//         return state;\n//     }\n// })\n//\n// export default forecastReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/forecastReducer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import {createReducer} from \"@reduxjs/toolkit\";\r\n// import {getForecast} from \"../appThunk\";\r\n// import {setForecast, dropForecastWeather} from \"../actions/weatherActions\";\r\n//\r\n//\r\n// const initialState = {\r\n//     forecastWeather: {},\r\n//     forecastPeriod: 7,\r\n//     hasFetched: false,\r\n//     isFetching: false,\r\n//     isFetchingError: null\r\n// };\r\n//\r\n// const forecastReducer = createReducer(initialState, {\r\n//     [getForecast.pending]: (state) => {\r\n//         state.isFetching = true;\r\n//         return state;\r\n//     },\r\n//     [getForecast.rejected]: (state, action) => {\r\n//         state.isFetching = false;\r\n//         state.error = action.error.message;\r\n//         return state;\r\n//     },\r\n//     [getForecast.fulfilled]: (state, action) => {\r\n//         state.isFetching = false;\r\n//         state.hasFetched = true;\r\n//         state.forecastWeather =  action.payload;\r\n//         return state;\r\n//     },\r\n//     [setForecast] : (state, action) => {\r\n//         state.forecastPeriod = action.payload\r\n//         return state;\r\n//     },\r\n//     [dropForecastWeather]: (state) => {\r\n//         state.isFetching = false;\r\n//         state.hasFetched = false;\r\n//         state.forecastWeather = {};\r\n//         return state;\r\n//     }\r\n// })\r\n//\r\n// export default forecastReducer;"]},"metadata":{},"sourceType":"module"}