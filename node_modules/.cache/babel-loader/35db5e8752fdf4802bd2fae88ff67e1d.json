{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\Forecast.js\";\nimport React from 'react';\nimport Gmap from \"./Gmap\";\nimport Card from \"@material-ui/core/Card\";\nimport Moment from 'moment';\nimport { CardContent, Grid, Typography } from \"@material-ui/core\";\nimport { ForecastItems } from \"./elementary/ForecastItems\";\nexport function Forecast(props) {\n  console.log(props);\n  const forecastItems = props.hasFetched ? /*#__PURE__*/React.createElement(ForecastItems, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    wrap: \"wrap\",\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, forecastItems), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, props.forecastPeriod < 7 ? /*#__PURE__*/React.createElement(Gmap, Object.assign({}, props.actualLocation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 51\n    }\n  })) : null)));\n}\n_c = Forecast;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/Forecast.js"],"names":["React","Gmap","Card","Moment","CardContent","Grid","Typography","ForecastItems","Forecast","props","console","log","forecastItems","hasFetched","forecastPeriod","actualLocation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,WAAR,EAAqBC,IAArB,EAA2BC,UAA3B,QAA4C,mBAA5C;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAGA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,aAAa,GAAIH,KAAK,CAACI,UAAP,gBAClB,oBAAC,aAAD,oBAAmBJ,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADkB,GAElB,IAFJ;AAKG,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAwC,IAAA,SAAS,EAAC,KAAlD;AACM,IAAA,OAAO,EAAC,eADd;AAEM,IAAA,UAAU,EAAC,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,aADL,CAJJ,eAQI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,KAAK,CAACK,cAAN,GAAuB,CAAxB,gBAA6B,oBAAC,IAAD,oBAAUL,KAAK,CAACM,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B,GAAiE,IADtE,CARJ,CADJ,CADD;AAgBN;KAxBeP,Q;AAwBf","sourcesContent":["import React from 'react';\r\nimport Gmap from \"./Gmap\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Moment from 'moment';\r\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport {ForecastItems} from \"./elementary/ForecastItems\";\r\n\r\n\r\nexport function Forecast(props) {\r\n    console.log(props)\r\n\r\n    const forecastItems = (props.hasFetched) ? (\r\n        <ForecastItems {...props}/>\r\n    ) : null;\r\n\r\n\r\n       return (\r\n        <div>\r\n            <Grid container spacing={2} wrap=\"wrap\" direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\">\r\n\r\n                <Grid item>\r\n                    {forecastItems}\r\n                </Grid>\r\n\r\n                <Grid item xs={8}>\r\n                    {(props.forecastPeriod < 7) ? <Gmap {...props.actualLocation}/> : null}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}