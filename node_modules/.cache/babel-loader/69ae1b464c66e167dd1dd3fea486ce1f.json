{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\components\\\\main\\\\DetailedWeather.js\";\nimport React from 'react';\nimport { CardContent, Grid, Typography } from \"@material-ui/core\";\nimport Divider from '@material-ui/core/Divider';\nimport Moment from \"moment\";\nexport function DetailedWeather(props) {\n  const weather = props.weather.weather;\n  const location = props.location.actualLocation;\n  console.log('props in DetailedWeather', props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"Wizard_DetailedWeather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"Wizard_DetailedWeather_Current\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, location.city, \", \", location.countryCode), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Current weather:\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, Math.floor(weather.current.temp - 273.15, 1), \" \\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, weather.current.weather[0].description), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Humidity \", weather.current.humidity, \" %\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Wind \", weather.current.wind_speed, \" meters per second\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wizard_DetailedWeather_hourlyForecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, props.weather.hasFetched ? weather.hourly.map(forecast => {\n    if (Moment.unix(forecast.dt).format('HH') % 6 === 0) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: forecast.dt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }\n      }, Moment.unix(forecast.dt).format('HH:mm '), Math.floor(forecast.temp - 273.15, 1), \"\\xB0C Wind \", forecast.wind_speed, \" meters per second\"));\n    }\n  }) : null));\n}\n_c = DetailedWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedWeather\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/main/DetailedWeather.js"],"names":["React","CardContent","Grid","Typography","Divider","Moment","DetailedWeather","props","weather","location","actualLocation","console","log","city","countryCode","Math","floor","current","temp","description","humidity","wind_speed","hasFetched","hourly","map","forecast","unix","dt","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,IAArB,EAA2BC,UAA3B,QAA4C,mBAA5C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACnC,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcA,OAA9B;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAN,CAAeC,cAAhC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCL,KAAxC;AAEA,sBACI;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,gCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BE,QAAQ,CAACI,IAAnC,QAA2CJ,QAAQ,CAACK,WAApD,CADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,IAAI,CAACC,KAAL,CAAWR,OAAO,CAACS,OAAR,CAAgBC,IAAhB,GAAuB,MAAlC,EAA0C,CAA1C,CAA1B,WAHJ,eAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BV,OAAO,CAACS,OAAR,CAAgBT,OAAhB,CAAwB,CAAxB,EAA2BW,WAArD,CAJJ,eAKI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmCX,OAAO,CAACS,OAAR,CAAgBG,QAAnD,OALJ,eAMI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+BZ,OAAO,CAACS,OAAR,CAAgBI,UAA/C,uBANJ,eAOI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,eAWI;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,KAAK,CAACC,OAAN,CAAcc,UAAf,GACGd,OAAO,CAACe,MAAR,CAAeC,GAAf,CAAmBC,QAAQ,IAAI;AAC3B,QAAIpB,MAAM,CAACqB,IAAP,CAAYD,QAAQ,CAACE,EAArB,EAAyBC,MAAzB,CAAgC,IAAhC,IAAwC,CAAxC,KAA8C,CAAlD,EAAqD;AACjD,0BACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,GAAG,EAAEH,QAAQ,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKtB,MAAM,CAACqB,IAAP,CAAYD,QAAQ,CAACE,EAArB,EAAyBC,MAAzB,CAAgC,QAAhC,CADL,EAEKb,IAAI,CAACC,KAAL,CAAWS,QAAQ,CAACP,IAAT,GAAgB,MAA3B,EAAmC,CAAnC,CAFL,iBAGUO,QAAQ,CAACJ,UAHnB,uBADJ,CADJ;AASH;AACJ,GAZD,CADH,GAcE,IAfP,CAXJ,CADJ;AAmCH;KAzCef,e","sourcesContent":["import React from 'react';\r\nimport {CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Moment from \"moment\";\r\n\r\n\r\nexport function DetailedWeather(props) {\r\n    const weather = props.weather.weather;\r\n    const location = props.location.actualLocation;\r\n\r\n    console.log('props in DetailedWeather', props)\r\n\r\n    return (\r\n        <div class='Wizard_DetailedWeather'>\r\n            <div class='Wizard_DetailedWeather_Current'>\r\n                <Typography variant='h4'>{location.city}, {location.countryCode}</Typography>\r\n                <Typography variant='h5'>Current weather:</Typography>\r\n                <Typography variant='h5'>{Math.floor(weather.current.temp - 273.15, 1)} °C</Typography>\r\n                <Typography variant='h6'>{weather.current.weather[0].description}</Typography>\r\n                <Typography variant='h6'>Humidity {weather.current.humidity} %</Typography>\r\n                <Typography variant='h6'>Wind {weather.current.wind_speed} meters per second</Typography>\r\n                <Divider/>\r\n            </div>\r\n\r\n            <div className=\"Wizard_DetailedWeather_hourlyForecast\">\r\n                {(props.weather.hasFetched)? (\r\n                    weather.hourly.map(forecast => {\r\n                        if (Moment.unix(forecast.dt).format('HH') % 6 === 0) {\r\n                            return (\r\n                                <Grid item key={forecast.dt}>\r\n                                    <Typography>\r\n                                        {Moment.unix(forecast.dt).format('HH:mm ')}\r\n                                        {Math.floor(forecast.temp - 273.15, 1)}°C\r\n                                        Wind {forecast.wind_speed} meters per second\r\n                                    </Typography>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    })\r\n                ): null}\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}