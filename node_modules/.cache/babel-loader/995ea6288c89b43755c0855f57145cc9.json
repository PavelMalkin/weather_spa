{"ast":null,"code":"import _defineProperty from\"C:/dev/react/weather_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"C:/dev/react/weather_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var _createReducer;import{createReducer}from\"@reduxjs/toolkit\";import{saveCity,deleteCity}from\"../actions/citiesActions\";var initialState={savedCities:[],hasFetched:false};var citiesReducer=createReducer(initialState,(_createReducer={},_defineProperty(_createReducer,saveCity,function(state,action){state.savedCities=[].concat(_toConsumableArray(state.savedCities),_toConsumableArray(action.payload));state.hasFetched=true;return state;}),_defineProperty(_createReducer,deleteCity,function(state,action){state.savedCities.forEach(function(city,index){if(city.city===action.payload.city){state.savedCities.splice(index,1);}});return state;}),_createReducer));export default citiesReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/citiesReducer.js"],"names":["createReducer","saveCity","deleteCity","initialState","savedCities","hasFetched","citiesReducer","state","action","payload","forEach","city","index","splice"],"mappings":"2TAAA,OAAQA,aAAR,KAA4B,kBAA5B,CACA,OAAQC,QAAR,CAAkBC,UAAlB,KAAmC,0BAAnC,CAGA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,WAAW,CAAE,EADI,CAEjBC,UAAU,CAAE,KAFK,CAArB,CAKA,GAAMC,CAAAA,aAAa,CAAGN,aAAa,CAACG,YAAD,mDAC9BF,QAD8B,CACnB,SAACM,KAAD,CAAQC,MAAR,CAAmB,CAC3BD,KAAK,CAACH,WAAN,8BAAwBG,KAAK,CAACH,WAA9B,qBAA8CI,MAAM,CAACC,OAArD,GACAF,KAAK,CAACF,UAAN,CAAmB,IAAnB,CACA,MAAOE,CAAAA,KAAP,CACH,CAL8B,iCAM9BL,UAN8B,CAMjB,SAACK,KAAD,CAAQC,MAAR,CAAmB,CAC7BD,KAAK,CAACH,WAAN,CAAkBM,OAAlB,CAA2B,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACxC,GAAID,IAAI,CAACA,IAAL,GAAcH,MAAM,CAACC,OAAP,CAAeE,IAAjC,CAAuC,CACnCJ,KAAK,CAACH,WAAN,CAAkBS,MAAlB,CAAyBD,KAAzB,CAAgC,CAAhC,EACH,CACJ,CAJD,EAKA,MAAOL,CAAAA,KAAP,CACH,CAb8B,kBAAnC,CAiBA,cAAeD,CAAAA,aAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {saveCity, deleteCity} from \"../actions/citiesActions\";\r\n\r\n\r\nconst initialState = {\r\n    savedCities: [],\r\n    hasFetched: false,\r\n};\r\n\r\nconst citiesReducer = createReducer(initialState, {\r\n    [saveCity]: (state, action) => {\r\n        state.savedCities = [...state.savedCities, ...action.payload];\r\n        state.hasFetched = true;\r\n        return state;\r\n    },\r\n    [deleteCity]: (state, action) => {\r\n        state.savedCities.forEach( (city, index) => {\r\n            if (city.city === action.payload.city) {\r\n                state.savedCities.splice(index, 1)\r\n            }\r\n        })\r\n        return state\r\n    }\r\n\r\n})\r\n\r\nexport default citiesReducer;"]},"metadata":{},"sourceType":"module"}