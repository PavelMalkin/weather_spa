{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\react\\\\weather_spa\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getForecast, getCurrentWeatherByCoord, getWeather } from './redux/appThunk';\nimport Navbar from './components/Navbar';\nimport SavedCities from \"./components/SavedCities\";\nimport Main from \"./components/Main\";\nimport { Forecast } from \"./components/Forecast\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from \"@material-ui/core\";\nimport { saveCity } from \"./redux/actions/citiesActions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1) // width: theme.spacing(16),\n      // height: theme.spacing(16),\n\n    }\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const location = useSelector(store => store.location);\n  const weather = useSelector(store => store.weather);\n  const savedCities = useSelector(store => store.cities);\n  useEffect(() => {\n    if (!location.hasFetched && !location.isFetching) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          dispatch(getCurrentWeatherByCoord([position.coords.latitude, position.coords.longitude]));\n        }, () => {\n          console.log('location error');\n        });\n      } else {\n        // Browser doesn't support Geolocation\n        console.log('Browser doesnt support Geolocation');\n      }\n    }\n  }, [location]);\n  useEffect(() => {\n    if (localStorage.getItem('savedCities') && !savedCities.hasFetched) {\n      dispatch(saveCity(JSON.parse(localStorage.getItem('savedCities'))));\n    } else {\n      localStorage.setItem('savedCities', JSON.stringify(savedCities.savedCities));\n    }\n  }, [savedCities]);\n  useEffect(() => {\n    if (!weather.hasFetched && !weather.isFetchingError && !weather.isFetching && location.hasFetched) {\n      dispatch(getWeather(location.actualLocation.location));\n    }\n  }, [weather, location]);\n  const routes = savedCities.hasFetched ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, Object.assign({}, location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Main, Object.assign({}, location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Forecast, Object.assign({}, weather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SavedCities, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(App, \"URQuUPEztUh0ekCS/je05shv+7g=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/App.js"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Router","Switch","Route","Link","useSelector","useDispatch","getForecast","getCurrentWeatherByCoord","getWeather","Navbar","SavedCities","Main","Forecast","makeStyles","Grid","saveCity","useStyles","theme","root","display","flexWrap","margin","spacing","App","classes","dispatch","location","store","weather","savedCities","cities","hasFetched","isFetching","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","localStorage","getItem","JSON","parse","setItem","stringify","isFetchingError","actualLocation","routes","Home","About"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getForecast, getCurrentWeatherByCoord, getWeather} from './redux/appThunk'\r\nimport Navbar from './components/Navbar'\r\nimport SavedCities from \"./components/SavedCities\";\r\nimport Main from \"./components/Main\";\r\nimport {Forecast} from \"./components/Forecast\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {saveCity} from \"./redux/actions/citiesActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            // width: theme.spacing(16),\r\n            // height: theme.spacing(16),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const location = useSelector(store => store.location);\r\n    const weather = useSelector(store => store.weather)\r\n    const savedCities = useSelector(store => store.cities)\r\n\r\n    useEffect(() => {\r\n        if (!location.hasFetched && !location.isFetching) {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                        dispatch(getCurrentWeatherByCoord([position.coords.latitude, position.coords.longitude]));\r\n                    },\r\n                    () => {\r\n                        console.log('location error')\r\n                    }\r\n                );\r\n            } else {\r\n                // Browser doesn't support Geolocation\r\n                console.log('Browser doesnt support Geolocation')\r\n            }\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n            if (localStorage.getItem('savedCities') && !savedCities.hasFetched) {\r\n                dispatch(saveCity(JSON.parse(localStorage.getItem('savedCities'))))\r\n            } else {\r\n                localStorage.setItem('savedCities', JSON.stringify(savedCities.savedCities))\r\n            }\r\n        },\r\n        [savedCities])\r\n\r\n    useEffect(() => {\r\n        if (!weather.hasFetched && !weather.isFetchingError && !weather.isFetching && location.hasFetched) {\r\n            dispatch(getWeather(location.actualLocation.location))\r\n        }\r\n    }, [weather, location]);\r\n\r\n    const routes = (savedCities.hasFetched)? (\r\n        <div>\r\n\r\n        </div>\r\n    ) : null;\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Grid container\r\n                  className={classes.root}\r\n                  direction='column'\r\n            >\r\n                <Grid item>\r\n                    <Navbar {...location}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Main {...location}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Forecast {...weather} />\r\n                </Grid>\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/about\" component={About} />\r\n\r\n                </Switch>\r\n\r\n                <Grid item>\r\n                    <SavedCities/>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}