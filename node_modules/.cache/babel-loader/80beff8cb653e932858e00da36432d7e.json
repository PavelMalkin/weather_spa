{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from\"react-redux\";import{saveCity}from\"../../redux/actions/citiesActions\";// Material\nimport Paper from'@material-ui/core/Paper';import{CardContent,Grid,IconButton,Typography}from\"@material-ui/core\";import AddCircleOutlineIcon from'@material-ui/icons/AddCircleOutline';export default function Main(props){var dispatch=useDispatch();var weather=useSelector(function(store){return store.weather;});var savedCities=useSelector(function(store){return store.cities.savedCities;});var Weather=weather.hasFetched?/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{align:\"center\",variant:\"h5\"},Math.floor(weather.weather.current.temp-273.15,1),\" \\xB0C\"),/*#__PURE__*/React.createElement(Typography,{align:\"center\",variant:\"h4\"},props.actualLocation.city,\", \",props.actualLocation.countryCode),/*#__PURE__*/React.createElement(Typography,{align:\"center\",variant:\"h6\"},weather.weather.current.weather[0].description,\", Wind \",weather.weather.current.wind_speed,\" meters per second\"))):null;var handleButton=function handleButton(){if(!savedCities.find(function(city){return city.city===props.actualLocation.city;})){dispatch(saveCity([props.actualLocation]));}};return/*#__PURE__*/React.createElement(Paper,{elevation:3,style:{minHeight:'15vh'}},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"space-between\",alignItems:\"flex-start\"},/*#__PURE__*/React.createElement(Grid,{item:true}),Weather,/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(IconButton,{onClick:handleButton},/*#__PURE__*/React.createElement(AddCircleOutlineIcon,null)))))));}","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/components/basic/Main.js"],"names":["React","useSelector","useDispatch","saveCity","Paper","CardContent","Grid","IconButton","Typography","AddCircleOutlineIcon","Main","props","dispatch","weather","store","savedCities","cities","Weather","hasFetched","Math","floor","current","temp","actualLocation","city","countryCode","description","wind_speed","handleButton","find","minHeight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,QAAR,KAAuB,mCAAvB,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,OAAQC,WAAR,CAAqBC,IAArB,CAA2BC,UAA3B,CAAuCC,UAAvC,KAAwD,mBAAxD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,qCAAjC,CAGA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAChC,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,OAAO,CAAGZ,WAAW,CAAC,SAAAa,KAAK,QAAIA,CAAAA,KAAK,CAACD,OAAV,EAAN,CAA3B,CACA,GAAME,CAAAA,WAAW,CAAGd,WAAW,CAAC,SAAAa,KAAK,QAAIA,CAAAA,KAAK,CAACE,MAAN,CAAaD,WAAjB,EAAN,CAA/B,CAEA,GAAME,CAAAA,OAAO,CAAIJ,OAAO,CAACK,UAAT,cAAwB,oBAAC,IAAD,EAAM,IAAI,KAAV,eAChC,oBAAC,WAAD,mBACI,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,CACY,OAAO,CAAC,IADpB,EAC0BC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACA,OAAR,CAAgBQ,OAAhB,CAAwBC,IAAxB,CAA+B,MAA1C,CAAkD,CAAlD,CAD1B,UADJ,cAGI,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,CACY,OAAO,CAAC,IADpB,EAC0BX,KAAK,CAACY,cAAN,CAAqBC,IAD/C,MACuDb,KAAK,CAACY,cAAN,CAAqBE,WAD5E,CAHJ,cAKI,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,CAA2B,OAAO,CAAC,IAAnC,EAAyCZ,OAAO,CAACA,OAAR,CAAgBQ,OAAhB,CAAwBR,OAAxB,CAAgC,CAAhC,EAAmCa,WAA5E,WAAgGb,OAAO,CAACA,OAAR,CAAgBQ,OAAhB,CAAwBM,UAAxH,sBALJ,CADgC,CAAxB,CAUV,IAVN,CAYA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAI,CAACb,WAAW,CAACc,IAAZ,CAAiB,SAAAL,IAAI,QAAIA,CAAAA,IAAI,CAACA,IAAL,GAAcb,KAAK,CAACY,cAAN,CAAqBC,IAAvC,EAArB,CAAL,CAAwE,CACxEZ,QAAQ,CAACT,QAAQ,CAAC,CAACQ,KAAK,CAACY,cAAP,CAAD,CAAT,CAAR,CACC,CACJ,CAJD,CAOA,mBACI,oBAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,KAAK,CAAE,CAACO,SAAS,CAAE,MAAZ,CAA5B,eACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CACM,SAAS,CAAC,KADhB,CAEM,OAAO,CAAC,eAFd,CAGM,UAAU,CAAC,YAHjB,eAII,oBAAC,IAAD,EAAM,IAAI,KAAV,EAJJ,CAMKb,OANL,cAOI,oBAAC,IAAD,EAAM,IAAI,KAAV,eACI,oBAAC,IAAD,EAAM,SAAS,KAAf,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,eACI,oBAAC,UAAD,EAAY,OAAO,CAAEW,YAArB,eACI,oBAAC,oBAAD,MADJ,CADJ,CADJ,CADJ,CAPJ,CADJ,CADJ,CAsBH","sourcesContent":["import React from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {saveCity} from \"../../redux/actions/citiesActions\";\r\n// Material\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {CardContent, Grid, IconButton, Typography} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\n\r\nexport default function Main(props) {\r\n    const dispatch = useDispatch();\r\n    const weather = useSelector(store => store.weather);\r\n    const savedCities = useSelector(store => store.cities.savedCities)\r\n\r\n    const Weather = (weather.hasFetched) ? (<Grid item>\r\n            <CardContent>\r\n                <Typography align='center'\r\n                            variant='h5'>{Math.floor(weather.weather.current.temp - 273.15, 1)} Â°C</Typography>\r\n                <Typography align='center'\r\n                            variant='h4'>{props.actualLocation.city}, {props.actualLocation.countryCode}</Typography>\r\n                <Typography align='center' variant='h6'>{weather.weather.current.weather[0].description}, Wind {weather.weather.current.wind_speed} meters per\r\n                    second</Typography>\r\n            </CardContent>\r\n        </Grid>)\r\n        : null;\r\n\r\n    const handleButton = () => {\r\n        if (!savedCities.find(city => city.city === props.actualLocation.city)) {\r\n        dispatch(saveCity([props.actualLocation]))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} style={{minHeight: '15vh'}}>\r\n            <Grid container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\">\r\n                <Grid item>\r\n                </Grid>\r\n                {Weather}\r\n                <Grid item>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <IconButton onClick={handleButton}>\r\n                                <AddCircleOutlineIcon/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}