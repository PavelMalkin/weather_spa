{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCityName, getCurrentWeather } from \"../appThunk\";\nimport { saveCity } from \"../actions/citiesActions\";\nconst initialState = {\n  currentCity: '',\n  savedCities: [{\n    city: 'Moscow',\n    countryCode: 'RU',\n    location: {\n      lat: 55.755826,\n      lon: 34.99\n    }\n  }, {\n    city: 'Barcelona',\n    countryCode: 'ES',\n    location: {\n      lat: 32.82,\n      lon: 34.99\n    }\n  }, {\n    city: 'Haifa',\n    countryCode: 'IL',\n    location: {\n      lat: 32.82,\n      lon: 34.99\n    }\n  }, {\n    city: 'New York',\n    countryCode: 'US',\n    location: {\n      lat: 32.82,\n      lon: 34.99\n    }\n  }, {\n    city: 'Podolsk',\n    countryCode: 'RU',\n    location: {\n      lat: 32.82,\n      lon: 34.99\n    }\n  }]\n};\nconst citiesReducer = createReducer(initialState, {\n  [getCityName.pending]: state => {\n    state.isFetching = true;\n    return state;\n  },\n  [getCityName.rejected]: (state, action) => {\n    state.isFetching = false;\n    state.error = action.error.message;\n    return state;\n  },\n  [getCityName.fulfilled]: (state, action) => {\n    state.isFetching = false;\n    state.hasFetched = true;\n    state.currentCity = action.payload;\n    return state;\n  },\n  [saveCity]: (state, action) => {\n    console.log('saveCity fired', action.payload);\n    state.savedCities = [...state.savedCities, ...[action.payload]];\n    return state;\n  }\n});\nexport default citiesReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/citiesReducer.js"],"names":["createReducer","getCityName","getCurrentWeather","saveCity","initialState","currentCity","savedCities","city","countryCode","location","lat","lon","citiesReducer","pending","state","isFetching","rejected","action","error","message","fulfilled","hasFetched","payload","console","log"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,SAAQC,WAAR,EAAqBC,iBAArB,QAA6C,aAA7C;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,WAAW,EAAE,CACT;AAACC,IAAAA,IAAI,EAAC,QAAN;AAAeC,IAAAA,WAAW,EAAE,IAA5B;AAAkCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,SAAL;AAAgBC,MAAAA,GAAG,EAAC;AAApB;AAA3C,GADS,EAET;AAACJ,IAAAA,IAAI,EAAC,WAAN;AAAkBC,IAAAA,WAAW,EAAE,IAA/B;AAAqCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,KAAL;AAAYC,MAAAA,GAAG,EAAC;AAAhB;AAA9C,GAFS,EAGT;AAACJ,IAAAA,IAAI,EAAC,OAAN;AAAcC,IAAAA,WAAW,EAAE,IAA3B;AAAiCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,KAAL;AAAYC,MAAAA,GAAG,EAAC;AAAhB;AAA1C,GAHS,EAIT;AAACJ,IAAAA,IAAI,EAAC,UAAN;AAAiBC,IAAAA,WAAW,EAAE,IAA9B;AAAoCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,KAAL;AAAYC,MAAAA,GAAG,EAAC;AAAhB;AAA7C,GAJS,EAKT;AAACJ,IAAAA,IAAI,EAAC,SAAN;AAAgBC,IAAAA,WAAW,EAAE,IAA7B;AAAmCC,IAAAA,QAAQ,EAAC;AAACC,MAAAA,GAAG,EAAC,KAAL;AAAYC,MAAAA,GAAG,EAAC;AAAhB;AAA5C,GALS;AAFI,CAArB;AAWA,MAAMC,aAAa,GAAGZ,aAAa,CAACI,YAAD,EAAe;AAC9C,GAACH,WAAW,CAACY,OAAb,GAAwBC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,UAAN,GAAmB,IAAnB;AACA,WAAOD,KAAP;AACH,GAJ6C;AAK9C,GAACb,WAAW,CAACe,QAAb,GAAwB,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACvCH,IAAAA,KAAK,CAACC,UAAN,GAAmB,KAAnB;AACAD,IAAAA,KAAK,CAACI,KAAN,GAAcD,MAAM,CAACC,KAAP,CAAaC,OAA3B;AACA,WAAOL,KAAP;AACH,GAT6C;AAU9C,GAACb,WAAW,CAACmB,SAAb,GAAyB,CAACN,KAAD,EAAQG,MAAR,KAAmB;AACxCH,IAAAA,KAAK,CAACC,UAAN,GAAmB,KAAnB;AACAD,IAAAA,KAAK,CAACO,UAAN,GAAmB,IAAnB;AACAP,IAAAA,KAAK,CAACT,WAAN,GAAqBY,MAAM,CAACK,OAA5B;AACA,WAAOR,KAAP;AACH,GAf6C;AAiB9C,GAACX,QAAD,GAAY,CAACW,KAAD,EAAQG,MAAR,KAAmB;AAC3BM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,MAAM,CAACK,OAArC;AACAR,IAAAA,KAAK,CAACR,WAAN,GAAoB,CAAC,GAAGQ,KAAK,CAACR,WAAV,EAAuB,GAAG,CAACW,MAAM,CAACK,OAAR,CAA1B,CAApB;AACA,WAAOR,KAAP;AACH;AArB6C,CAAf,CAAnC;AAyBA,eAAeF,aAAf","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCityName, getCurrentWeather} from \"../appThunk\";\r\nimport {saveCity} from \"../actions/citiesActions\";\r\n\r\n\r\nconst initialState = {\r\n    currentCity: '',\r\n    savedCities: [\r\n        {city:'Moscow',countryCode: 'RU', location:{lat:55.755826, lon:34.99} },\r\n        {city:'Barcelona',countryCode: 'ES', location:{lat:32.82, lon:34.99} },\r\n        {city:'Haifa',countryCode: 'IL', location:{lat:32.82, lon:34.99} },\r\n        {city:'New York',countryCode: 'US', location:{lat:32.82, lon:34.99} },\r\n        {city:'Podolsk',countryCode: 'RU', location:{lat:32.82, lon:34.99} },\r\n    ],\r\n};\r\n\r\nconst citiesReducer = createReducer(initialState, {\r\n    [getCityName.pending]: (state) => {\r\n        state.isFetching = true;\r\n        return state;\r\n    },\r\n    [getCityName.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getCityName.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.currentCity =  action.payload;\r\n        return state;\r\n    },\r\n\r\n    [saveCity]: (state, action) => {\r\n        console.log('saveCity fired', action.payload)\r\n        state.savedCities = [...state.savedCities, ...[action.payload]]\r\n        return state;\r\n    },\r\n\r\n})\r\n\r\nexport default citiesReducer;"]},"metadata":{},"sourceType":"module"}