{"ast":null,"code":"import _defineProperty from\"C:/dev/react/weather_spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _createReducer;import{createReducer}from\"@reduxjs/toolkit\";import{getCurrentWeatherByCoord,getCityCoordinatesByName}from\"../appThunk\";import{setCurrentCity}from\"../actions/citiesActions\";var initialState={actualLocation:{},hasFetched:false,isFetching:false,isFetchingError:null};var locationReducer=createReducer(initialState,(_createReducer={},_defineProperty(_createReducer,getCurrentWeatherByCoord.pending,function(state){state.isFetching=true;state.hasFetched=false;return state;}),_defineProperty(_createReducer,getCurrentWeatherByCoord.rejected,function(state,action){state.isFetching=false;state.error=action.error.message;return state;}),_defineProperty(_createReducer,getCurrentWeatherByCoord.fulfilled,function(state,action){state.isFetching=false;state.hasFetched=true;state.actualLocation={city:action.payload.list[0].name,countryCode:action.payload.list[0].sys.country,location:action.payload.list[0].coord};return state;}),_defineProperty(_createReducer,setCurrentCity,function(state,action){state.actualLocation=action.payload;return state;}),_defineProperty(_createReducer,getCityCoordinatesByName.pending,function(state){state.isFetching=true;state.hasFetched=false;return state;}),_defineProperty(_createReducer,getCityCoordinatesByName.rejected,function(state,action){state.isFetching=false;state.error=action.error.message;return state;}),_defineProperty(_createReducer,getCityCoordinatesByName.fulfilled,function(state,action){state.isFetching=false;state.hasFetched=true;state.actualLocation={city:action.payload.results[0].address_components[0].long_name,countryCode:action.payload.results[0].address_components.find(function(addr){return addr.types.some(function(type){return type===\"country\";});}).short_name,location:{lat:action.payload.results[0].geometry.location.lat,lon:action.payload.results[0].geometry.location.lng}};return state;}),_createReducer));export default locationReducer;","map":{"version":3,"sources":["C:/dev/react/weather_spa/src/redux/reducers/locationReducer.js"],"names":["createReducer","getCurrentWeatherByCoord","getCityCoordinatesByName","setCurrentCity","initialState","actualLocation","hasFetched","isFetching","isFetchingError","locationReducer","pending","state","rejected","action","error","message","fulfilled","city","payload","list","name","countryCode","sys","country","location","coord","results","address_components","long_name","find","addr","types","some","type","short_name","lat","geometry","lon","lng"],"mappings":"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","sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\nimport {getCurrentWeatherByCoord, getCityCoordinatesByName} from \"../appThunk\";\r\nimport {setCurrentCity} from \"../actions/citiesActions\"\r\n\r\n\r\nconst initialState = {\r\n    actualLocation: {},\r\n    hasFetched: false,\r\n    isFetching: false,\r\n    isFetchingError: null\r\n};\r\n\r\nconst locationReducer = createReducer(initialState, {\r\n    [getCurrentWeatherByCoord.pending]: (state) => {\r\n        state.isFetching = true;\r\n        state.hasFetched = false;\r\n        return state;\r\n    },\r\n    [getCurrentWeatherByCoord.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getCurrentWeatherByCoord.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.actualLocation = {\r\n            city: action.payload.list[0].name,\r\n            countryCode: action.payload.list[0].sys.country,\r\n            location: action.payload.list[0].coord\r\n        }\r\n        return state;\r\n    },\r\n    [setCurrentCity] : (state, action) => {\r\n        state.actualLocation = action.payload;\r\n        return state;\r\n    },\r\n    [getCityCoordinatesByName.pending]: (state) => {\r\n        state.isFetching = true;\r\n        state.hasFetched = false;\r\n        return state;\r\n    },\r\n    [getCityCoordinatesByName.rejected]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.error = action.error.message;\r\n        return state;\r\n    },\r\n    [getCityCoordinatesByName.fulfilled]: (state, action) => {\r\n        state.isFetching = false;\r\n        state.hasFetched = true;\r\n        state.actualLocation = {\r\n            city: action.payload.results[0].address_components[0].long_name,\r\n            countryCode: action.payload.results[0].address_components.find(addr => addr.types.some( type => type === \"country\")).short_name,\r\n            location: {\r\n                lat: action.payload.results[0].geometry.location.lat,\r\n                lon: action.payload.results[0].geometry.location.lng\r\n            }\r\n        }\r\n        return state;\r\n    },\r\n})\r\n\r\nexport default locationReducer;"]},"metadata":{},"sourceType":"module"}